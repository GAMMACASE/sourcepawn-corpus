/* Plugin Template generated by Pawn Studio */

#include <sourcemod>
#include <tf2_stocks>
#include <tf2>

//////////////////////////////////////////////////////
// ABOUT
//
//This plugin specifically targets the heavy glitch.
//The Heavy glitch allows him to move at faster than normal
//speeds while having the minigun revved up.
//
//How To Reproduce Glitch:
// 1. Go Heavy
// 2. Spin up MiniGun (do not release Mouse2)
// 3. Change Secondary or Melee weapon in spawn (do NOT release Mouse2)
// 4. You can now move walking speed while having MiniGun revved up
//
// Glitch resets once Mouse2 is released
//
// Edited by Michelle Sleeper to ban instead of block glitch.
//
///////////////////////////////////////////////////////
#define PLUGIN_VERSION "1.0"

new Handle:c_Enabled   = INVALID_HANDLE;
new Handle:c_BanLength   = INVALID_HANDLE;
new Handle:c_BanReason   = INVALID_HANDLE;
new m_flMaxspeed;
new Float:maxSpeed[MAXPLAYERS];

public Plugin:myinfo = 
{
	name = "[TF2] Heavy Glitch Ban",
	author = "msleeper",
	description = "Bans players using the fast Heavy glitch",
	version = PLUGIN_VERSION,
	url = "http://www.msleeper.com/"
}

public OnPluginStart()
{
	
	HookEvent("player_spawn", Event_ResetButtons, EventHookMode_Post);
	HookEvent("post_inventory_application", Event_ResetButtons, EventHookMode_Post); 
	
	CreateConVar("sm_heavyglitchfix_version", PLUGIN_VERSION, "[TF2]Prevents fast Heavy glitch", FCVAR_PLUGIN|FCVAR_SPONLY|FCVAR_REPLICATED|FCVAR_NOTIFY);
	
	c_Enabled   = CreateConVar("sm_heavyglitchfix_enable",    "1",        "<0/1> Enable Heavy Glitch Fix");

	c_BanLength   = CreateConVar("sm_heavyglitchfix_banlength",    "0",        "Length of ban, 0 = permenant");
	c_BanReason   = CreateConVar("sm_heavyglitchfix_banreason",    "LOL heavy glitch",        "Ban reason shown to player");
	
	HookConVarChange(c_Enabled,	ConVarChange);
	
	m_flMaxspeed = FindSendPropInfo("CTFPlayer", "m_flMaxspeed")
}

public ConVarChange(Handle:convar, const String:oldValue[], const String:newValue[])
{
	if(convar == c_Enabled)
	{
		if(GetConVarInt(c_Enabled))
		{
			PrintCenterTextAll("Heavy Glitch Fix: ENABLED");
		}else{
			PrintCenterTextAll("Heavy Glitch Fix: DISABLED");
		}
	}
}

public Action:Event_ResetButtons(Handle:event, const String:name[], bool:dontBroadcast)
{
	if(!GetConVarInt(c_Enabled))
		return;
	
	new client = GetClientOfUserId(GetEventInt(event, "userid"));
	if (!client)
		return;
	
	
	//is player heavy?
	if(TF2_GetPlayerClass(client) == TFClass_Heavy)
	{
		//save the max speed because some wearables (e.g. Gloves of Running Urgently)
		//make the Heavy go faster
		maxSpeed[client] = GetEntDataFloat(client, m_flMaxspeed);
		
		//wait a little bit to determine if if can make this Heavy move
		//normal speed
		CreateTimer(2.0, Timer_ResetSpeed, client);
	}
}

public Action:Timer_ResetSpeed(Handle:Timer, any:client)
{
	if(!IsClientInGame(client))
		return Plugin_Stop;
	
	if(TF2_GetPlayerClass(client) != TFClass_Heavy)
		return Plugin_Stop;
	
	new iButtons = GetClientButtons(client);
	
	if ( (iButtons & IN_ATTACK2) && GetEntDataFloat(client, m_flMaxspeed) > 110 )
	{
		new String:BanReason[255];
		GetConVarString(c_BanReason, BanReason, sizeof(BanReason));
		ServerCommand("sm_ban #%i %i \"%s\"", GetClientUserId(client), GetConVarInt(c_BanLength), BanReason);
	}
	
	return Plugin_Stop;
}