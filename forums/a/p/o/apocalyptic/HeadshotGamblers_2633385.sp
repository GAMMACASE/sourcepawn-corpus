/* Plugin Template generated by Pawn Studio */

#include <sourcemod>
#include <cstrike>
#include <sdktools>
#include <sdktools_functions>
#include <sdkhooks>
#include <sdktools_voice>
#include <events>
#include <string>

new String:ClientName[MAXPLAYERS][128]
new bool:Freezing=false
new HeadshotGamblersCount
new HeadshotGamblersMoney[MAXPLAYERS]
new HeadshotGamblersAnswer[MAXPLAYERS]
new HeadshotGamblersCommunication

public Plugin:myinfo = 
{
	name = "Headshot Gamblers",
	author = "apocalyptic",
	description = "A casino plugin for CS:GO",
	version = "beta",
	url = ""
}

public OnPluginStart()
{
	HookEvent("round_prestart", RoundPrestart)
	HookEvent("player_spawn", PlayerSpawn)
	HookEvent("round_freeze_end",RoundFreezeEnd)
	HookEvent("player_death",PlayerDeath,EventHookMode_Pre)
	HookEvent("round_end", RoundEnd)
	RegConsoleCmd("apo_hg_menu",ShowHeadshotGamblersMenu)
	AddCommandListener(Command_Mute, "mute")
	AddCommandListener(Command_Say, "say")
	AddCommandListener(Command_Say_Team, "say_team")
	CreateConVar("apo_hg_primary_control", "10", "Enable Headshot Gamblers when N players online. Set to -1 to disable Headshot Gamblers.")
	CreateConVar("apo_hg_communication_control", "1", "Can alive players receive message from dead players and spectators? Set to 1 to prevent communication.")
}

public OnClientAuthorized(client)
{
	GetClientName(client,ClientName[client],128)
}

public RoundPrestart(Handle:event, const String:name[], bool:dontBroadcast)
{
	Freezing=true
	HeadshotGamblersCount=GetConVarInt(FindConVar("apo_hg_primary_control"))
	HeadshotGamblersCommunication=GetConVarInt(FindConVar("apo_hg_communication_control"))
	if (GameRules_GetProp("m_bWarmupPeriod")==1)
	{
		HeadshotGamblersCount=-1
		return
	}
	if (HeadshotGamblersCount==-1)
		PrintToChatAll("[\x07Headshot Gamblers\x01] Headshot Gamblers has been disabled. You cannot bet now.")
	else
	{
		new PlayerQuatity=0
		for (new i=1;i<MAXPLAYERS;i++)
		{
			if (!IsClientConnected(i))
				continue
			if (!IsClientInGame(i))
				continue
			if (GetClientTeam(i)==CS_TEAM_SPECTATOR)
				continue
			if (IsFakeClient(i))
				continue
			if (!IsPlayerAlive(i))
				continue
			PlayerQuatity++
		}
		if (PlayerQuatity>HeadshotGamblersCount)
		{
			PrintToChatAll("[\x07Headshot Gamblers\x01] Headshot Gamblers is available now. You can press \x02Delete\x01 to bet. Console command: \x02apo_hg_menu\x01.")
			if (HeadshotGamblersCommunication==1)
				UpdateVoiceSettings()
		}
		else
		{
			PrintToChatAll("[\x07Headshot Gamblers\x01] Headshot Gamblers requires %d player to start. Please wait until there are enough player in this server.")
			HeadshotGamblersCount=-1
		}
	}
}

public PlayerSpawn(Handle:event, const String:name[], bool:dontBroadcast)
{	
	new client=GetClientOfUserId(GetEventInt(event, "userid"))
	HeadshotGamblersAnswer[client]=-1
	HeadshotGamblersMoney[client]=0
	if (HeadshotGamblersCommunication==1)
		UpdateVoiceSettings()
}

public RoundFreezeEnd(Handle:event, const String:name[], bool:dontBroadcast)
{
	Freezing=false
	if (HeadshotGamblersCommunication==1)
		UpdateVoiceSettings()
}

public Action:Command_Say(client, const String:command[], args)
{
	if (HeadshotGamblersCount!=-1 && HeadshotGamblersCommunication==0)
		return Plugin_Continue
	decl String:Text[256]
	if (!client || IsChatTrigger() || GetCmdArg(1,Text,sizeof(Text))<1)
		return Plugin_Continue
	new String:Saying[1024]
	Format(Saying,sizeof(Saying),"%s: %s",ClientName[client],Text)
	if (IsPlayerAlive(client))
	{
		for (new i=1;i<MAXPLAYERS;i++)
		{
			if (!IsClientConnected(i))
				continue
			if (!IsClientInGame(i))
				continue
			if (IsFakeClient(i))
				continue
			if (!IsPlayerAlive(i))
				continue
			PrintToChat(i,Saying)
		}
	}
	else
	{
		for (new i=1;i<MAXPLAYERS;i++)
		{
			if (!IsClientConnected(i))
				continue
			if (!IsClientInGame(i))
				continue
			if (IsFakeClient(i))
				continue
			if (IsPlayerAlive(i))
				continue
			PrintToChat(i,Saying)
		}
	}
	return Plugin_Stop
}

public Action:Command_Say_Team(client, const String:command[], args)
{
	if (HeadshotGamblersCount!=-1 && HeadshotGamblersCommunication==0)
		return Plugin_Continue
	decl String:Text[256]
	if (!client || IsChatTrigger() || GetCmdArg(1,Text,sizeof(Text))<1)
		return Plugin_Continue
	new String:Saying[1024]
	Format(Saying,sizeof(Saying),"%s: \x04(Team Chat)\x01 %s",ClientName[client],Text)
	if (IsPlayerAlive(client))
	{
		for (new i=1;i<MAXPLAYERS;i++)
		{
			if (!IsClientConnected(i))
				continue
			if (!IsClientInGame(i))
				continue
			if (IsFakeClient(i))
				continue
			if (GetClientTeam(i)==GetClientTeam(client))
				PrintToChat(i,Saying)
		}
	}
	else
	{
		for (new i=1;i<MAXPLAYERS;i++)
		{
			if (!IsClientConnected(i))
				continue
			if (!IsClientInGame(i))
				continue
			if (IsFakeClient(i))
				continue
			if (IsPlayerAlive(i))
				continue
			if (GetClientTeam(i)==GetClientTeam(client))
				PrintToChat(i,Saying)
		}
	}
	return Plugin_Stop
}

public Action:PlayerDeath(Handle:event, const String:name[], bool:dontBroadcast)
{
	if (HeadshotGamblersCount==-1)
		return
	new Killer=GetClientOfUserId(GetEventInt(event, "attacker"))
	if (!IsValidEntity(Killer))
		return
	new Victim=GetClientOfUserId(GetEventInt(event, "userid"))
	if (!IsValidEntity(Victim))
		return
	new bool:AlivePlayerCt=false
	new bool:AlivePlayerT=false
	for (new i=1;i<MAXPLAYERS;i++)
	{
		if (!IsClientConnected(i))
			continue
		if (!IsClientInGame(i))
			continue
		if (IsPlayerAlive(i))
		{
			if (GetClientTeam(i)==CS_TEAM_CT)
				AlivePlayerCt=true
			else
				AlivePlayerT=true
		}
	}
	if (!AlivePlayerT || !AlivePlayerCt)
		CheckHeadshotGambler()
	else if ((!(Killer==0 || Killer==Victim)) && GetClientTeam(Killer)!=GetClientTeam(Victim) && GetEventBool(event, "headshot"))
	{
		HeadshotGamblersCount++
		HeadshotGamblersTips(Killer)
		if (HeadshotGamblersCommunication==1)
			UpdateVoiceSettings()
	}
	return
}

public RoundEnd(Handle:event, const String:name[], bool:dontBroadcast)
{
	if (HeadshotGamblersCount==-1)
		return
	CheckHeadshotGambler()
}

public CheckHeadshotGambler()
{
	new MaxMoney=GetConVarInt(FindConVar("mp_maxmoney"))
	for (new client=1;client<MAXPLAYERS;client++)
	{
		if (!IsClientConnected(client))
			continue
		if (!IsClientInGame(client))
			continue
		if (IsFakeClient(client))
			continue
		if (HeadshotGamblersMoney[client]==0)
			continue
		if (HeadshotGamblersAnswer[client]==HeadshotGamblersCount%2)
		{
			new CurrentMoney=GetClientMoney(client)
			if ((CurrentMoney+HeadshotGamblersMoney[client])>MaxMoney)
				HeadshotGamblersMoney[client]=MaxMoney-CurrentMoney
			PrintToChat(client,"[\x07Headshot Gamblers\x01] Congratulations! You win \x04%d\x01!",HeadshotGamblersMoney[client])
			SetClientMoney(client,CurrentMoney+HeadshotGamblersMoney[client])
		}
		else
			PrintToChat(client,"[\x07Headshot Gamblers\x01] Opps! You lose \x04%d\x01!",HeadshotGamblersMoney[client])
	}
}

public SetClientMoney(client,money)
{
	if (IsClientConnected(client) && IsClientInGame(client))
		SetEntProp(client, Prop_Send, "m_iAccount", money)
}

public GetClientMoney(client)
{
	if (IsClientConnected(client) && IsClientInGame(client))
	{
		new money=GetEntProp(client, Prop_Send, "m_iAccount")
		return money
	}
	return -1
}

public Action:Command_Mute(client, const String:command[], args)
{
	ClientCommand(client,"apo_hg_menu")
}

public Action:ShowHeadshotGamblersMenu(client,args)
{
	if (HeadshotGamblersCount==-1)
	{
		PrintToChat(client,"[\x07Headshot Gamblers\x01] Headshot Gamblers is disabled now. Please try again next round.")
		return Plugin_Handled
	}
	if (!IsPlayerAlive(client))
	{
		PrintToChat(client,"[\x07Headshot Gamblers\x01] Only alive players can bet. Please try again next round.")
		return Plugin_Handled
	}
	if (!Freezing)
	{
		PrintToChat(client,"[\x07Headshot Gamblers\x01] You can only bet during freeze time. Please try again next round.")
		return Plugin_Handled
	}
	new CurrentMoney=GetClientMoney(client)
	new Handle:HandleHeadshotGamblersMenu = CreateMenu(HeadshotGamblersMenu)
	SetMenuTitle(HandleHeadshotGamblersMenu, "Headshot Gamblers")
	if (CurrentMoney>=1000)
	{
		AddMenuItem(HandleHeadshotGamblersMenu, "0", "1000 (Odd)")
		AddMenuItem(HandleHeadshotGamblersMenu, "1", "1000 (Even)")
	}
	else
	{
		AddMenuItem(HandleHeadshotGamblersMenu, "0", "1000 (Odd)",ITEMDRAW_DISABLED)
		AddMenuItem(HandleHeadshotGamblersMenu, "1", "1000 (Even)",ITEMDRAW_DISABLED)
	}
	if (CurrentMoney>=2000)
	{
		AddMenuItem(HandleHeadshotGamblersMenu, "2", "2000 (Odd)")
		AddMenuItem(HandleHeadshotGamblersMenu, "3", "2000 (Even)")
	}
	else
	{
		AddMenuItem(HandleHeadshotGamblersMenu, "2", "2000 (Odd)",ITEMDRAW_DISABLED)
		AddMenuItem(HandleHeadshotGamblersMenu, "3", "2000 (Even)",ITEMDRAW_DISABLED)
	}
	if (CurrentMoney>=5000)
	{
		AddMenuItem(HandleHeadshotGamblersMenu, "4", "5000 (Odd)")
		AddMenuItem(HandleHeadshotGamblersMenu, "5", "5000 (Even)")
	}
	else
	{
		AddMenuItem(HandleHeadshotGamblersMenu, "4", "5000 (Odd)",ITEMDRAW_DISABLED)
		AddMenuItem(HandleHeadshotGamblersMenu, "5", "5000 (Even)",ITEMDRAW_DISABLED)
	}
	if (CurrentMoney>=10000)
	{
		AddMenuItem(HandleHeadshotGamblersMenu, "6", "10000 (Odd)")
		AddMenuItem(HandleHeadshotGamblersMenu, "7", "10000 (Even)")
	}
	else
	{
		AddMenuItem(HandleHeadshotGamblersMenu, "6", "10000 (Odd)",ITEMDRAW_DISABLED)
		AddMenuItem(HandleHeadshotGamblersMenu, "7", "10000 (Even)",ITEMDRAW_DISABLED)
	}
	AddMenuItem(HandleHeadshotGamblersMenu, "10", "All bet (Odd)")
	AddMenuItem(HandleHeadshotGamblersMenu, "11", "All bet (Even)")
	SetMenuExitButton(HandleHeadshotGamblersMenu, true)
	DisplayMenu(HandleHeadshotGamblersMenu, client, 20)
	return Plugin_Handled
}

public HeadshotGamblersMenu(Handle:HandleHeadshotGamblersMenu, MenuAction:action, param1, param2)
{
	new client=param1
	if (HeadshotGamblersCount==-1)
	{
		PrintToChat(client,"[\x07Headshot Gamblers\x01] Headshot Gamblers is disabled now. Please try again next round.")
		return
	}
	if (!IsPlayerAlive(client))
	{
		PrintToChat(client,"[\x07Headshot Gamblers\x01] Only alive players can bet. Please try again next round.")
		return
	}
	if (!Freezing)
	{
		PrintToChat(client,"[\x07Headshot Gamblers\x01] You can only bet during freeze time. Please try again next round.")
		return
	}
	new choice=param2
	if (action == MenuAction_Select)
	{
		new CurrentMoney=GetClientMoney(client)
		switch(choice)
		{
			case 0,1:
			{
				if (CurrentMoney>=1000)
				{
					HeadshotGamblersMoney[client]=HeadshotGamblersMoney[client]+1000
					SetClientMoney(client,CurrentMoney-1000)
				}
			}
			case 2,3:
			{
				if (CurrentMoney>=2000)
				{
					HeadshotGamblersMoney[client]=HeadshotGamblersMoney[client]+2000
					SetClientMoney(client,CurrentMoney-2000)
				}
			}
			case 4,5:
			{
				if (CurrentMoney>=5000)
				{
					HeadshotGamblersMoney[client]=HeadshotGamblersMoney[client]+5000
					SetClientMoney(client,CurrentMoney-5000)
				}
			}
			case 6,7:
			{
				if (CurrentMoney>=10000)
				{
					HeadshotGamblersMoney[client]=HeadshotGamblersMoney[client]+10000
					SetClientMoney(client,CurrentMoney-10000)
				}
			}
			default:
			{
				HeadshotGamblersMoney[client]=HeadshotGamblersMoney[client]+CurrentMoney
				SetClientMoney(client,0)
			}
		}
		if (choice%2==1)
		{
			HeadshotGamblersAnswer[client]=0
			PrintToChatAll("[\x07Headshot Gamblers\x01] \x03%s\x01 bets \x04%d\x01 for \x02Even\x01.")
		}
		else
		{
			HeadshotGamblersAnswer[client]=1
			PrintToChatAll("[\x07Headshot Gamblers\x01] \x03%s\x01 bets \x04%d\x01 for \x02Odd\x01.")
		}
	}
	else if (action == MenuAction_End)
		CloseHandle(HandleHeadshotGamblersMenu);
}

public HeadshotGamblersTips(Killer)
{
	for (new client=1;client<MAXPLAYERS;client++)
	{
		if (!IsClientConnected(client))
			continue
		if (!IsClientInGame(client))
			continue
		if (IsFakeClient(client))
			continue
		if (HeadshotGamblersCommunication==1 && IsPlayerAlive(client))
			continue
		if (HeadshotGamblersMoney[client]==0)
		{
			if (HeadshotGamblersCount==0)
				PrintToChat(client,"[\x07Headshot Gamblers\x01] No one has been killed by headshot yet. You can bet next round.")
			else if (HeadshotGamblersCount==1)
				PrintToChat(client,"[\x07Headshot Gamblers\x01] \x04%d\x01 player has beed killed by headshot. You can bet next round.",HeadshotGamblersCount)
			else
				PrintToChat(client,"[\x07Headshot Gamblers\x01] \x04%d\x01 players have beed killed by headshot. You can bet next round.",HeadshotGamblersCount)
			continue
		}
		else
		{
			if (HeadshotGamblersCount==0)
			{
				if (HeadshotGamblersAnswer[client]==0)
					PrintToChat(client,"[\x07Headshot Gamblers\x01] No one has been killed by headshot yet. (Your wager: \x04%d\x01|Even)",HeadshotGamblersMoney[client])
				else
					PrintToChat(client,"[\x07Headshot Gamblers\x01] No one has been killed by headshot yet. (Your wager: \x04%d\x01|Odd)",HeadshotGamblersMoney[client])
			}
			else if (HeadshotGamblersCount>0)
			{
				if (HeadshotGamblersAnswer[client]==0)
				{
					if (HeadshotGamblersCount%2==0)
						PrintToChat(client,"[\x07Headshot Gamblers\x01] \x04%d\x01 headshots! (Your wager: \x04%d\x01|\x03Even\x01)",HeadshotGamblersCount,HeadshotGamblersMoney[client])
					else
						PrintToChat(client,"[\x07Headshot Gamblers\x01] \x04%d\x01 headshots! (Your wager: \x04%d\x01|Even)",HeadshotGamblersCount,HeadshotGamblersMoney[client])
				}
				else
				{
					if (HeadshotGamblersCount%2!=0)
						PrintToChat(client,"[\x07Headshot Gamblers\x01] \x04%d\x01 headshots! (Your wager: \x04%d\x01|\x03Odd\x01)",HeadshotGamblersCount,HeadshotGamblersMoney[client])
					else
						PrintToChat(client,"[\x07Headshot Gamblers\x01] \x04%d\x01 headshots! (Your wager: \x04%d\x01|Odd)",HeadshotGamblersCount,HeadshotGamblersMoney[client])
				}
			}
		}		
	}
}

public UpdateVoiceSettings()
{
	if (HeadshotGamblersCommunication==1)
	{
		for (new i=1;i<MAXPLAYERS;i++)
		{
			if (!IsClientConnected(i))
				continue
			if (!IsClientInGame(i))
				continue
			if (IsFakeClient(i))
				continue
			if (GetClientTeam(i)==CS_TEAM_SPECTATOR || GetClientTeam(i)==CS_TEAM_NONE)
			{
				for (new j=1;j<MAXPLAYERS;j++)
				{
					if (!IsClientConnected(j))
						continue
					if (!IsClientInGame(j))
						continue
					if (IsFakeClient(j))
						continue
					SetListenOverride(i,j,Listen_Yes)
					SetListenOverride(j,i,Listen_Yes)
				}
			}
			else if (GetClientTeam(i)==CS_TEAM_T || GetClientTeam(i)==CS_TEAM_CT)
			{
				if (IsPlayerAlive(i))
				{
					for (new j=1;j<MAXPLAYERS;j++)
					{
						if (!IsClientConnected(j))
							continue
						if (!IsClientInGame(j))
							continue
						if (IsFakeClient(j))
							continue
						if (GetClientTeam(i)==GetClientTeam(j) && IsPlayerAlive(j))
							SetListenOverride(i,j,Listen_Yes)
						else
							SetListenOverride(i,j,Listen_No)
					}
				}
				else
				{
					for (new j=1;j<MAXPLAYERS;j++)
					{
						if (!IsClientConnected(j))
							continue
						if (!IsClientInGame(j))
							continue
						if (IsFakeClient(j))
							continue
						if (IsPlayerAlive(j))
							SetListenOverride(i,j,Listen_No)
						else
							SetListenOverride(i,j,Listen_Yes)
					}
				}
			}
		}
	}
}