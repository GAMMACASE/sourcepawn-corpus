/* Plugin Template generated by Pawn Studio */
// Thanks to Damizean for starting this craze!


#include <sourcemod>

#define CVAR_FLAGS FCVAR_PLUGIN
#define PLUGIN_VERSION "1.3.1"

#define ZOMBIECLASS_SMOKER	1
#define ZOMBIECLASS_BOOMER	2
#define ZOMBIECLASS_HUNTER	3
#define ZOMBIECLASS_TANK	5

#define LOOT_DIENUMBER 		0
#define LOOT_DIECOUNT 		1
#define LOOT_ITEM_COUNT		2

#define LOOT_KIT_MIN		3
#define LOOT_KIT_MAX		4
#define LOOT_PILLS_MIN		5
#define LOOT_PILLS_MAX		6
#define LOOT_MOLLY_MIN		7
#define LOOT_MOLLY_MAX		8
#define LOOT_PIPE_MIN		9
#define LOOT_PIPE_MAX		10

#define LOOT_PANIC_MIN		11
#define LOOT_PANIC_MAX		12
#define LOOT_TANK_MIN		13
#define LOOT_TANK_MAX		14
#define LOOT_WITCH_MIN		15
#define LOOT_WITCH_MAX		16
#define LOOT_COMMON_MIN		17
#define LOOT_COMMON_MAX		18

#define LOOT_PISTOL_MIN		19
#define LOOT_PISTOL_MAX		20
#define LOOT_SMG_MIN		21
#define LOOT_SMG_MAX		22
#define LOOT_SHOT_MIN		23
#define LOOT_SHOT_MAX		24
#define LOOT_RIFLE_MIN		25
#define LOOT_RIFLE_MAX		26
#define LOOT_AUTOSHOT_MIN	27
#define LOOT_AUTOSHOT_MAX	28
#define LOOT_SNIPER_MIN		29
#define LOOT_SNIPER_MAX		30

public Plugin:myinfo = 
{
	name = "[L4D] Infected Loot Drops",
	author = "Thraka",
	description = "Chance to drop items on the death of a special infected.",
	version = PLUGIN_VERSION,
	url = "http://forums.alliedmods.net/showthread.php?p=974919"
}

new Handle:CVarIsEnabled;
new Handle:CVarDieSides[4];

new Handle:CVarHunterLoot[31];
new Handle:CVarBoomerLoot[31];
new Handle:CVarSmokerLoot[31];
new Handle:CVarTankLoot[31];
//new Handle:CVarWitchLoot[31];

new HunterLoot[31];
new BoomerLoot[31];
new SmokerLoot[31];
new TankLoot[31];
//new WitchLoot[31];

new Dice[4];

public OnPluginStart()
{
	SetRandomSeed(GetSysTickCount());
	
	CreateConVar("l4d_loot_ver", PLUGIN_VERSION, "Version of the infected loot drops plugins.", FCVAR_SPONLY|FCVAR_NOTIFY);
	
	CVarIsEnabled = CreateConVar("l4d_loot_enabled", "1", "Is the plugin enabled.", FCVAR_NOTIFY);
	HookConVarChange(CVarIsEnabled, Loot_EnableDisable);
	
	CVarDieSides[0] = CreateConVar("l4d_loot_dice1_sides", "10", "How many sides die 1 has.", FCVAR_NOTIFY);
	CVarDieSides[1] = CreateConVar("l4d_loot_dice2_sides", "20", "How many sides die 2 has.", FCVAR_NOTIFY);
	CVarDieSides[2] = CreateConVar("l4d_loot_dice3_sides", "40", "How many sides die 3 has.", FCVAR_NOTIFY);
	CVarDieSides[3] = CreateConVar("l4d_loot_dice4_sides", "100", "How many sides die 4 has.", FCVAR_NOTIFY);
		
	CVarHunterLoot[LOOT_DIENUMBER] = CreateConVar("l4d_loot_hunter_dienumber", "2", "Which die (1, 2, 4, or 4) is used when rolling for the hunter", FCVAR_NOTIFY, true, 1.0, true, 4.0);
	CVarHunterLoot[LOOT_DIECOUNT] = CreateConVar("l4d_loot_hunter_diecount", "1", "How many dice can roll. Each die is added to a total. (If a die rolls 0 it is not thrown)", FCVAR_NOTIFY, true, 1.0, true, 3.0);
	CVarHunterLoot[LOOT_ITEM_COUNT] = CreateConVar("l4d_loot_hunter_item_count", "1", "How many items are rolled for when the hunter dies.", FCVAR_NOTIFY, true, 0.0);	
	
	CVarHunterLoot[LOOT_KIT_MIN] = CreateConVar("l4d_loot_hunter_kit_min", "0", "Min die number for a hunter to drop a kit.", FCVAR_NOTIFY, true, 0.0);
	CVarHunterLoot[LOOT_KIT_MAX] = CreateConVar("l4d_loot_hunter_kit_max", "0", "Max die number for a hunter to drop a kit.", FCVAR_NOTIFY, true, 0.0);
	CVarHunterLoot[LOOT_PILLS_MIN] = CreateConVar("l4d_loot_hunter_pills_min", "0", "Min die number for a hunter to drop pills.", FCVAR_NOTIFY, true, 0.0);
	CVarHunterLoot[LOOT_PILLS_MAX] = CreateConVar("l4d_loot_hunter_pills_max", "0", "Max die number for a hunter to drop pills.", FCVAR_NOTIFY, true, 0.0);
	CVarHunterLoot[LOOT_MOLLY_MIN] = CreateConVar("l4d_loot_hunter_molly_min", "4", "Min die number for a hunter to drop a molitov.", FCVAR_NOTIFY, true, 0.0);
	CVarHunterLoot[LOOT_MOLLY_MAX] = CreateConVar("l4d_loot_hunter_molly_max", "6", "Max die number for a hunter to drop a molitov.", FCVAR_NOTIFY, true, 0.0);
	CVarHunterLoot[LOOT_PIPE_MIN] = CreateConVar("l4d_loot_hunter_pipe_min", "7", "Min die number for a hunter to drop a pipe bomb.", FCVAR_NOTIFY, true, 0.0);
	CVarHunterLoot[LOOT_PIPE_MAX] = CreateConVar("l4d_loot_hunter_pipe_max", "10", "Max die number for a hunter to drop a pipe bomb.", FCVAR_NOTIFY, true, 0.0);
	
	CVarHunterLoot[LOOT_PANIC_MIN] = CreateConVar("l4d_loot_hunter_panic_min", "0", "Min die number for a hunter to cause a zombie panic event.", FCVAR_NOTIFY, true, 0.0);
	CVarHunterLoot[LOOT_PANIC_MAX] = CreateConVar("l4d_loot_hunter_panic_max", "0", "Max die number for a hunter to cause a zombie panic event.", FCVAR_NOTIFY, true, 0.0);
	CVarHunterLoot[LOOT_TANK_MIN] = CreateConVar("l4d_loot_hunter_tankspawn_min", "0", "Min die number for a hunter to cause a tank to spawn nearby.", FCVAR_NOTIFY, true, 0.0);
	CVarHunterLoot[LOOT_TANK_MAX] = CreateConVar("l4d_loot_hunter_tankspawn_max", "0", "Max die number for a hunter to cause a tank to spawn nearby.", FCVAR_NOTIFY, true, 0.0);
	CVarHunterLoot[LOOT_WITCH_MIN] = CreateConVar("l4d_loot_hunter_witchspawn_min", "0", "Min die number for a hunter to cause a witch to spawn nearby.", FCVAR_NOTIFY, true, 0.0);
	CVarHunterLoot[LOOT_WITCH_MAX] = CreateConVar("l4d_loot_hunter_witchspawn_max", "0", "Max die number for a hunter to cause a witch to spawn nearby.", FCVAR_NOTIFY, true, 0.0);
	CVarHunterLoot[LOOT_COMMON_MIN] = CreateConVar("l4d_loot_hunter_common_min", "0", "Min die number for a hunter to cause common infected to spawn nearby.", FCVAR_NOTIFY, true, 0.0);
	CVarHunterLoot[LOOT_COMMON_MAX] = CreateConVar("l4d_loot_hunter_common_max", "0", "Max die number for a hunter to cause common infected to spawn nearby.", FCVAR_NOTIFY, true, 0.0);
	
	CVarHunterLoot[LOOT_PISTOL_MIN] = CreateConVar("l4d_loot_hunter_pistol_min", "0", 	"Min die number for a hunter to drop a pistol.", FCVAR_NOTIFY, true, 0.0);
	CVarHunterLoot[LOOT_PISTOL_MAX] = CreateConVar("l4d_loot_hunter_pistol_max", "0", 	"Max die number for a hunter to drop a pistol.", FCVAR_NOTIFY, true, 0.0);
	CVarHunterLoot[LOOT_SMG_MIN] = CreateConVar("l4d_loot_hunter_smg_min", "0", "Min die number for a hunter to drop a small machine gun.", FCVAR_NOTIFY, true, 0.0);
	CVarHunterLoot[LOOT_SMG_MAX] = CreateConVar("l4d_loot_hunter_smg_max", "0", "Max die number for a hunter to drop a small machine gun.", FCVAR_NOTIFY, true, 0.0);
	CVarHunterLoot[LOOT_SHOT_MIN] = CreateConVar("l4d_loot_hunter_shotgun_min", "0", "Min die number for a hunter to drop a shotgun.", FCVAR_NOTIFY, true, 0.0);
	CVarHunterLoot[LOOT_SHOT_MAX] = CreateConVar("l4d_loot_hunter_shotgun_max", "0", "Max die number for a hunter to drop a shotgun.", FCVAR_NOTIFY, true, 0.0);
	CVarHunterLoot[LOOT_RIFLE_MIN] = CreateConVar("l4d_loot_hunter_rifle_min", "0", "Min die number for a hunter to drop an auto rifle.", FCVAR_NOTIFY, true, 0.0);
	CVarHunterLoot[LOOT_RIFLE_MAX] = CreateConVar("l4d_loot_hunter_rifle_max", "0", "Max die number for a hunter to drop an auto rifle.", FCVAR_NOTIFY, true, 0.0);
	CVarHunterLoot[LOOT_AUTOSHOT_MIN] = CreateConVar("l4d_loot_hunter_autoshot_min", "0", "Min die number for a hunter to drop an auto shotgun.", FCVAR_NOTIFY, true, 0.0);
	CVarHunterLoot[LOOT_AUTOSHOT_MAX] = CreateConVar("l4d_loot_hunter_autoshot_max", "0", "Max die number for a hunter to drop an auto shotgun.", FCVAR_NOTIFY, true, 0.0);
	CVarHunterLoot[LOOT_SNIPER_MIN] = CreateConVar("l4d_loot_hunter_sniper_min", "0", "Min die number for a hunter to drop a sniper rifle.", FCVAR_NOTIFY, true, 0.0);
	CVarHunterLoot[LOOT_SNIPER_MAX] = CreateConVar("l4d_loot_hunter_sniper_max", "0", "Max die number for a hunter to drop a sniper rifle.", FCVAR_NOTIFY, true, 0.0);

	
	
	
	CVarSmokerLoot[LOOT_DIENUMBER] = CreateConVar("l4d_loot_smoker_dienumber", "3", "Which die (1, 2, 4, or 4) is used when rolling for the smoker", FCVAR_NOTIFY, true, 1.0, true, 4.0);
	CVarSmokerLoot[LOOT_DIECOUNT] = CreateConVar("l4d_loot_smoker_diecount", "1", "How many dice can roll. Each die is added to a total. (If a die rolls 0 it is not thrown)", FCVAR_NOTIFY, true, 1.0, true, 3.0);
	CVarSmokerLoot[LOOT_ITEM_COUNT] = CreateConVar("l4d_loot_smoker_item_count", "1", "How many items are rolled for when the smoker dies.", FCVAR_NOTIFY, true, 0.0);	
	
	CVarSmokerLoot[LOOT_KIT_MIN] = CreateConVar("l4d_loot_smoker_kit_min", "0", "Min die number for a smoker to drop a kit.", FCVAR_NOTIFY, true, 0.0);
	CVarSmokerLoot[LOOT_KIT_MAX] = CreateConVar("l4d_loot_smoker_kit_max", "0", "Max die number for a smoker to drop a kit.", FCVAR_NOTIFY, true, 0.0);
	CVarSmokerLoot[LOOT_PILLS_MIN] = CreateConVar("l4d_loot_smoker_pills_min",	"10", "Min die number for a smoker to drop pills.", FCVAR_NOTIFY, true, 0.0);
	CVarSmokerLoot[LOOT_PILLS_MAX] = CreateConVar("l4d_loot_smoker_pills_max",	"14", "Max die number for a smoker to drop pills.", FCVAR_NOTIFY, true, 0.0);
	CVarSmokerLoot[LOOT_MOLLY_MIN] = CreateConVar("l4d_loot_smoker_molly_min",	"2", "Min die number for a smoker to drop a molitov.", FCVAR_NOTIFY, true, 0.0);
	CVarSmokerLoot[LOOT_MOLLY_MAX] = CreateConVar("l4d_loot_smoker_molly_max",	"4", "Max die number for a smoker to drop a molitov.", FCVAR_NOTIFY, true, 0.0);
	CVarSmokerLoot[LOOT_PIPE_MIN] = CreateConVar("l4d_loot_smoker_pipe_min", "5", "Min die number for a smoker to drop a pipe bomb.", FCVAR_NOTIFY, true, 0.0);
	CVarSmokerLoot[LOOT_PIPE_MAX] = CreateConVar("l4d_loot_smoker_pipe_max", "8", "Max die number for a smoker to drop a pipe bomb.", FCVAR_NOTIFY, true, 0.0);
	
	CVarSmokerLoot[LOOT_PANIC_MIN] = CreateConVar("l4d_loot_smoker_panic_min",	"0", "Min die number for a smoker to cause a zombie panic event.", FCVAR_NOTIFY, true, 0.0);
	CVarSmokerLoot[LOOT_PANIC_MAX] = CreateConVar("l4d_loot_smoker_panic_max",	"0", "Max die number for a smoker to cause a zombie panic event.", FCVAR_NOTIFY, true, 0.0);
	CVarSmokerLoot[LOOT_TANK_MIN] = CreateConVar("l4d_loot_smoker_tankspawn_min",	"0", "Min die number for a smoker to cause a tank to spawn nearby.", FCVAR_NOTIFY, true, 0.0);
	CVarSmokerLoot[LOOT_TANK_MAX] = CreateConVar("l4d_loot_smoker_tankspawn_max",	"0", "Max die number for a smoker to cause a tank to spawn nearby.", FCVAR_NOTIFY, true, 0.0);
	CVarSmokerLoot[LOOT_WITCH_MIN] = CreateConVar("l4d_loot_smoker_witchspawn_min", "0", "Min die number for a smoker to cause a witch to spawn nearby.", FCVAR_NOTIFY, true, 0.0);
	CVarSmokerLoot[LOOT_WITCH_MAX] = CreateConVar("l4d_loot_smoker_witchspawn_max", "0", "Max die number for a smoker to cause a witch to spawn nearby.", FCVAR_NOTIFY, true, 0.0);
	CVarSmokerLoot[LOOT_COMMON_MIN] = CreateConVar("l4d_loot_smoker_common_min", "0", "Min die number for a smoker to cause common infected to spawn nearby.", FCVAR_NOTIFY, true, 0.0);
	CVarSmokerLoot[LOOT_COMMON_MAX] = CreateConVar("l4d_loot_smoker_common_max", "0", "Max die number for a smoker to cause common infected to spawn nearby.", FCVAR_NOTIFY, true, 0.0);
	
	CVarSmokerLoot[LOOT_PISTOL_MIN] = CreateConVar("l4d_loot_smoker_pistol_min", "20", 	"Min die number for a smoker to drop a pistol.", FCVAR_NOTIFY, true, 0.0);
	CVarSmokerLoot[LOOT_PISTOL_MAX] = CreateConVar("l4d_loot_smoker_pistol_max", "21", 	"Max die number for a smoker to drop a pistol.", FCVAR_NOTIFY, true, 0.0);
	CVarSmokerLoot[LOOT_SMG_MIN] = CreateConVar("l4d_loot_smoker_smg_min", "22", "Min die number for a smoker to drop a small machine gun.", FCVAR_NOTIFY, true, 0.0);
	CVarSmokerLoot[LOOT_SMG_MAX] = CreateConVar("l4d_loot_smoker_smg_max", "23", "Max die number for a smoker to drop a small machine gun.", FCVAR_NOTIFY, true, 0.0);
	CVarSmokerLoot[LOOT_SHOT_MIN] = CreateConVar("l4d_loot_smoker_shotgun_min", "23", "Min die number for a smoker to drop a shotgun.", FCVAR_NOTIFY, true, 0.0);
	CVarSmokerLoot[LOOT_SHOT_MAX] = CreateConVar("l4d_loot_smoker_shotgun_max", "24", "Max die number for a smoker to drop a shotgun.", FCVAR_NOTIFY, true, 0.0);
	CVarSmokerLoot[LOOT_RIFLE_MIN] = CreateConVar("l4d_loot_smoker_rifle_min",	"25", "Min die number for a smoker to drop an auto rifle.", FCVAR_NOTIFY, true, 0.0);
	CVarSmokerLoot[LOOT_RIFLE_MAX] = CreateConVar("l4d_loot_smoker_rifle_max",	"25", "Max die number for a smoker to drop an auto rifle.", FCVAR_NOTIFY, true, 0.0);
	CVarSmokerLoot[LOOT_AUTOSHOT_MIN] = CreateConVar("l4d_loot_smoker_autoshot_min", "26", "Min die number for a smoker to drop an auto shotgun.", FCVAR_NOTIFY, true, 0.0);
	CVarSmokerLoot[LOOT_AUTOSHOT_MAX] = CreateConVar("l4d_loot_smoker_autoshot_max", "26", "Max die number for a smoker to drop an auto shotgun.", FCVAR_NOTIFY, true, 0.0);
	CVarSmokerLoot[LOOT_SNIPER_MIN] = CreateConVar("l4d_loot_smoker_sniper_min", "27", "Min die number for a smoker to drop a sniper rifle.", FCVAR_NOTIFY, true, 0.0);
	CVarSmokerLoot[LOOT_SNIPER_MAX] = CreateConVar("l4d_loot_smoker_sniper_max", "27", "Max die number for a smoker to drop a sniper rifle.", FCVAR_NOTIFY, true, 0.0);
	

	
	CVarBoomerLoot[LOOT_DIENUMBER] = CreateConVar("l4d_loot_boomer_dienumber", "1", "Which die (1, 2, 4, or 4) is used when rolling for the boomer", FCVAR_NOTIFY, true, 1.0, true, 4.0);
	CVarBoomerLoot[LOOT_DIECOUNT] = CreateConVar("l4d_loot_boomer_diecount", "1", "How many dice can roll. Each die is added to a total. (If a die rolls 0 it is not thrown)", FCVAR_NOTIFY, true, 1.0, true, 3.0);
	CVarBoomerLoot[LOOT_ITEM_COUNT] = CreateConVar("l4d_loot_boomer_item_count", "1", "How many items are rolled for when the boomer dies.", FCVAR_NOTIFY, true, 0.0);	
	
	CVarBoomerLoot[LOOT_KIT_MIN] = CreateConVar("l4d_loot_boomer_kit_min", "0", "Min die number for a boomer to drop a kit.", FCVAR_NOTIFY, true, 0.0);
	CVarBoomerLoot[LOOT_KIT_MAX] = CreateConVar("l4d_loot_boomer_kit_max", "0", "Max die number for a boomer to drop a kit.", FCVAR_NOTIFY, true, 0.0);
	CVarBoomerLoot[LOOT_PILLS_MIN] = CreateConVar("l4d_loot_boomer_pills_min",	"2", "Min die number for a boomer to drop pills.", FCVAR_NOTIFY, true, 0.0);
	CVarBoomerLoot[LOOT_PILLS_MAX] = CreateConVar("l4d_loot_boomer_pills_max",	"3", "Max die number for a boomer to drop pills.", FCVAR_NOTIFY, true, 0.0);
	CVarBoomerLoot[LOOT_MOLLY_MIN] = CreateConVar("l4d_loot_boomer_molly_min",	"4", "Min die number for a boomer to drop a molitov.", FCVAR_NOTIFY, true, 0.0);
	CVarBoomerLoot[LOOT_MOLLY_MAX] = CreateConVar("l4d_loot_boomer_molly_max",	"6", "Max die number for a boomer to drop a molitov.", FCVAR_NOTIFY, true, 0.0);
	CVarBoomerLoot[LOOT_PIPE_MIN] = CreateConVar("l4d_loot_boomer_pipe_min", "0", "Min die number for a boomer to drop a pipe bomb.", FCVAR_NOTIFY, true, 0.0);
	CVarBoomerLoot[LOOT_PIPE_MAX] = CreateConVar("l4d_loot_boomer_pipe_max", "0", "Max die number for a boomer to drop a pipe bomb.", FCVAR_NOTIFY, true, 0.0);
	
	CVarBoomerLoot[LOOT_PANIC_MIN] = CreateConVar("l4d_loot_boomer_panic_min",	"0", "Min die number for a boomer to cause a zombie panic event.", FCVAR_NOTIFY, true, 0.0);
	CVarBoomerLoot[LOOT_PANIC_MAX] = CreateConVar("l4d_loot_boomer_panic_max",	"0", "Max die number for a boomer to cause a zombie panic event.", FCVAR_NOTIFY, true, 0.0);
	CVarBoomerLoot[LOOT_TANK_MIN] = CreateConVar("l4d_loot_boomer_tankspawn_min",	"0", "Min die number for a boomer to cause a tank to spawn nearby.", FCVAR_NOTIFY, true, 0.0);
	CVarBoomerLoot[LOOT_TANK_MAX] = CreateConVar("l4d_loot_boomer_tankspawn_max",	"0", "Max die number for a boomer to cause a tank to spawn nearby.", FCVAR_NOTIFY, true, 0.0);
	CVarBoomerLoot[LOOT_WITCH_MIN] = CreateConVar("l4d_loot_boomer_witchspawn_min", "0", "Min die number for a boomer to cause a witch to spawn nearby.", FCVAR_NOTIFY, true, 0.0);
	CVarBoomerLoot[LOOT_WITCH_MAX] = CreateConVar("l4d_loot_boomer_witchspawn_max", "0", "Max die number for a boomer to cause a witch to spawn nearby.", FCVAR_NOTIFY, true, 0.0);
	CVarBoomerLoot[LOOT_COMMON_MIN] = CreateConVar("l4d_loot_boomer_common_min", "0", "Min die number for a boomer to cause common infected to spawn nearby.", FCVAR_NOTIFY, true, 0.0);
	CVarBoomerLoot[LOOT_COMMON_MAX] = CreateConVar("l4d_loot_boomer_common_max", "0", "Max die number for a boomer to cause common infected to spawn nearby.", FCVAR_NOTIFY, true, 0.0);
	
	CVarBoomerLoot[LOOT_PISTOL_MIN] = CreateConVar("l4d_loot_boomer_pistol_min", "0", 	"Min die number for a boomer to drop a pistol.", FCVAR_NOTIFY, true, 0.0);
	CVarBoomerLoot[LOOT_PISTOL_MAX] = CreateConVar("l4d_loot_boomer_pistol_max", "0", 	"Max die number for a boomer to drop a pistol.", FCVAR_NOTIFY, true, 0.0);
	CVarBoomerLoot[LOOT_SMG_MIN] = CreateConVar("l4d_loot_boomer_smg_min", "0", "Min die number for a boomer to drop a small machine gun.", FCVAR_NOTIFY, true, 0.0);
	CVarBoomerLoot[LOOT_SMG_MAX] = CreateConVar("l4d_loot_boomer_smg_max", "0", "Max die number for a boomer to drop a small machine gun.", FCVAR_NOTIFY, true, 0.0);
	CVarBoomerLoot[LOOT_SHOT_MIN] = CreateConVar("l4d_loot_boomer_shotgun_min", "0", "Min die number for a boomer to drop a shotgun.", FCVAR_NOTIFY, true, 0.0);
	CVarBoomerLoot[LOOT_SHOT_MAX] = CreateConVar("l4d_loot_boomer_shotgun_max", "0", "Max die number for a boomer to drop a shotgun.", FCVAR_NOTIFY, true, 0.0);
	CVarBoomerLoot[LOOT_RIFLE_MIN] = CreateConVar("l4d_loot_boomer_rifle_min",	"0", "Min die number for a boomer to drop an auto rifle.", FCVAR_NOTIFY, true, 0.0);
	CVarBoomerLoot[LOOT_RIFLE_MAX] = CreateConVar("l4d_loot_boomer_rifle_max",	"0", "Max die number for a boomer to drop an auto rifle.", FCVAR_NOTIFY, true, 0.0);
	CVarBoomerLoot[LOOT_AUTOSHOT_MIN] = CreateConVar("l4d_loot_boomer_autoshot_min", "0", "Min die number for a boomer to drop an auto shotgun.", FCVAR_NOTIFY, true, 0.0);
	CVarBoomerLoot[LOOT_AUTOSHOT_MAX] = CreateConVar("l4d_loot_boomer_autoshot_max", "0", "Max die number for a boomer to drop an auto shotgun.", FCVAR_NOTIFY, true, 0.0);
	CVarBoomerLoot[LOOT_SNIPER_MIN] = CreateConVar("l4d_loot_boomer_sniper_min", "0", "Min die number for a boomer to drop a sniper rifle.", FCVAR_NOTIFY, true, 0.0);
	CVarBoomerLoot[LOOT_SNIPER_MAX] = CreateConVar("l4d_loot_boomer_sniper_max", "0", "Max die number for a boomer to drop a sniper rifle.", FCVAR_NOTIFY, true, 0.0);	
	
	
	
	
	CVarTankLoot[LOOT_DIENUMBER] = CreateConVar("l4d_loot_tank_dienumber", "2", "Which die (1, 2, 4, or 4) is used when rolling for the tank", FCVAR_NOTIFY, true, 1.0, true, 4.0);
	CVarTankLoot[LOOT_DIECOUNT] = CreateConVar("l4d_loot_tank_diecount", "1", "How many dice can roll. Each die is added to a total. (If a die rolls 0 it is not thrown)", FCVAR_NOTIFY, true, 1.0, true, 3.0);
	CVarTankLoot[LOOT_ITEM_COUNT] = CreateConVar("l4d_loot_tank_item_count", "4", "How many items are rolled for when the tank dies.", FCVAR_NOTIFY, true, 0.0);	
	
	CVarTankLoot[LOOT_KIT_MIN] = CreateConVar("l4d_loot_tank_kit_min", "1", "Min die number for a tank to drop a kit.", FCVAR_NOTIFY, true, 0.0);
	CVarTankLoot[LOOT_KIT_MAX] = CreateConVar("l4d_loot_tank_kit_max", "5", "Max die number for a tank to drop a kit.", FCVAR_NOTIFY, true, 0.0);
	CVarTankLoot[LOOT_PILLS_MIN] = CreateConVar("l4d_loot_tank_pills_min",	"6", "Min die number for a tank to drop pills.", FCVAR_NOTIFY, true, 0.0);
	CVarTankLoot[LOOT_PILLS_MAX] = CreateConVar("l4d_loot_tank_pills_max",	"8", "Max die number for a tank to drop pills.", FCVAR_NOTIFY, true, 0.0);
	CVarTankLoot[LOOT_MOLLY_MIN] = CreateConVar("l4d_loot_tank_molly_min",	"9", "Min die number for a tank to drop a molitov.", FCVAR_NOTIFY, true, 0.0);
	CVarTankLoot[LOOT_MOLLY_MAX] = CreateConVar("l4d_loot_tank_molly_max",	"10", "Max die number for a tank to drop a molitov.", FCVAR_NOTIFY, true, 0.0);
	CVarTankLoot[LOOT_PIPE_MIN] = CreateConVar("l4d_loot_tank_pipe_min", "11", "Min die number for a tank to drop a pipe bomb.", FCVAR_NOTIFY, true, 0.0);
	CVarTankLoot[LOOT_PIPE_MAX] = CreateConVar("l4d_loot_tank_pipe_max", "12", "Max die number for a tank to drop a pipe bomb.", FCVAR_NOTIFY, true, 0.0);
	
	CVarTankLoot[LOOT_PANIC_MIN] = CreateConVar("l4d_loot_tank_panic_min",	"13", "Min die number for a tank to cause a zombie panic event.", FCVAR_NOTIFY, true, 0.0);
	CVarTankLoot[LOOT_PANIC_MAX] = CreateConVar("l4d_loot_tank_panic_max",	"14", "Max die number for a tank to cause a zombie panic event.", FCVAR_NOTIFY, true, 0.0);
	CVarTankLoot[LOOT_TANK_MIN] = CreateConVar("l4d_loot_tank_tankspawn_min",	"0", "Min die number for a tank to cause a tank to spawn nearby.", FCVAR_NOTIFY, true, 0.0);
	CVarTankLoot[LOOT_TANK_MAX] = CreateConVar("l4d_loot_tank_tankspawn_max",	"0", "Max die number for a tank to cause a tank to spawn nearby.", FCVAR_NOTIFY, true, 0.0);
	CVarTankLoot[LOOT_WITCH_MIN] = CreateConVar("l4d_loot_tank_witchspawn_min", "0", "Min die number for a tank to cause a witch to spawn nearby.", FCVAR_NOTIFY, true, 0.0);
	CVarTankLoot[LOOT_WITCH_MAX] = CreateConVar("l4d_loot_tank_witchspawn_max", "0", "Max die number for a tank to cause a witch to spawn nearby.", FCVAR_NOTIFY, true, 0.0);
	CVarTankLoot[LOOT_COMMON_MIN] = CreateConVar("l4d_loot_tank_common_min", "0", "Min die number for a tank to cause common infected to spawn nearby.", FCVAR_NOTIFY, true, 0.0);
	CVarTankLoot[LOOT_COMMON_MAX] = CreateConVar("l4d_loot_tank_common_max", "0", "Max die number for a tank to cause common infected to spawn nearby.", FCVAR_NOTIFY, true, 0.0);
	
	CVarTankLoot[LOOT_PISTOL_MIN] = CreateConVar("l4d_loot_tank_pistol_min", "0", 	"Min die number for a tank to drop a pistol.", FCVAR_NOTIFY, true, 0.0);
	CVarTankLoot[LOOT_PISTOL_MAX] = CreateConVar("l4d_loot_tank_pistol_max", "0", 	"Max die number for a tank to drop a pistol.", FCVAR_NOTIFY, true, 0.0);
	CVarTankLoot[LOOT_SMG_MIN] = CreateConVar("l4d_loot_tank_smg_min", "0", "Min die number for a tank to drop a small machine gun.", FCVAR_NOTIFY, true, 0.0);
	CVarTankLoot[LOOT_SMG_MAX] = CreateConVar("l4d_loot_tank_smg_max", "0", "Max die number for a tank to drop a small machine gun.", FCVAR_NOTIFY, true, 0.0);
	CVarTankLoot[LOOT_SHOT_MIN] = CreateConVar("l4d_loot_tank_shotgun_min", "0", "Min die number for a tank to drop a shotgun.", FCVAR_NOTIFY, true, 0.0);
	CVarTankLoot[LOOT_SHOT_MAX] = CreateConVar("l4d_loot_tank_shotgun_max", "0", "Max die number for a tank to drop a shotgun.", FCVAR_NOTIFY, true, 0.0);
	CVarTankLoot[LOOT_RIFLE_MIN] = CreateConVar("l4d_loot_tank_rifle_min",	"15", "Min die number for a tank to drop an auto rifle.", FCVAR_NOTIFY, true, 0.0);
	CVarTankLoot[LOOT_RIFLE_MAX] = CreateConVar("l4d_loot_tank_rifle_max",	"16", "Max die number for a tank to drop an auto rifle.", FCVAR_NOTIFY, true, 0.0);
	CVarTankLoot[LOOT_AUTOSHOT_MIN] = CreateConVar("l4d_loot_tank_autoshot_min", "17", "Min die number for a tank to drop an auto shotgun.", FCVAR_NOTIFY, true, 0.0);
	CVarTankLoot[LOOT_AUTOSHOT_MAX] = CreateConVar("l4d_loot_tank_autoshot_max", "18", "Max die number for a tank to drop an auto shotgun.", FCVAR_NOTIFY, true, 0.0);
	CVarTankLoot[LOOT_SNIPER_MIN] = CreateConVar("l4d_loot_tank_sniper_min", "19", "Min die number for a tank to drop a sniper rifle.", FCVAR_NOTIFY, true, 0.0);
	CVarTankLoot[LOOT_SNIPER_MAX] = CreateConVar("l4d_loot_tank_sniper_max", "20", "Max die number for a tank to drop a sniper rifle.", FCVAR_NOTIFY, true, 0.0);	
	
	
	/*
	CVarWitchLoot[LOOT_DIENUMBER] = CreateConVar("l4d_loot_witch_dienumber", "2", "Which die (1, 2, 4, or 4) is used when rolling for the witch", FCVAR_PLUGIN, true, 1.0, true, 4.0);
	CVarWitchLoot[LOOT_DIECOUNT] = CreateConVar("l4d_loot_witch_diecount", "1", "How many dice can roll. Each die is added to a total. (If a die rolls 0 it is not thrown)", FCVAR_PLUGIN, true, 1.0, true, 3.0);
	CVarWitchLoot[LOOT_ITEM_COUNT] = CreateConVar("l4d_loot_witch_item_count", "4", "How many items are rolled for when the witch dies.", FCVAR_PLUGIN, true, 0.0);	
	
	CVarWitchLoot[LOOT_KIT_MIN] = CreateConVar("l4d_loot_witch_kit_min", "1", "Min die number for a witch to drop a kit.", FCVAR_PLUGIN, true, 0.0);
	CVarWitchLoot[LOOT_KIT_MAX] = CreateConVar("l4d_loot_witch_kit_max", "5", "Max die number for a witch to drop a kit.", FCVAR_PLUGIN, true, 0.0);
	CVarWitchLoot[LOOT_PILLS_MIN] = CreateConVar("l4d_loot_witch_pills_min",	"6", "Min die number for a witch to drop pills.", FCVAR_PLUGIN, true, 0.0);
	CVarWitchLoot[LOOT_PILLS_MAX] = CreateConVar("l4d_loot_witch_pills_max",	"8", "Max die number for a witch to drop pills.", FCVAR_PLUGIN, true, 0.0);
	CVarWitchLoot[LOOT_MOLLY_MIN] = CreateConVar("l4d_loot_witch_molly_min",	"9", "Min die number for a witch to drop a molitov.", FCVAR_PLUGIN, true, 0.0);
	CVarWitchLoot[LOOT_MOLLY_MAX] = CreateConVar("l4d_loot_witch_molly_max",	"10", "Max die number for a witch to drop a molitov.", FCVAR_PLUGIN, true, 0.0);
	CVarWitchLoot[LOOT_PIPE_MIN] = CreateConVar("l4d_loot_witch_pipe_min", "11", "Min die number for a witch to drop a pipe bomb.", FCVAR_PLUGIN, true, 0.0);
	CVarWitchLoot[LOOT_PIPE_MAX] = CreateConVar("l4d_loot_witch_pipe_max", "12", "Max die number for a witch to drop a pipe bomb.", FCVAR_PLUGIN, true, 0.0);
	
	CVarWitchLoot[LOOT_PANIC_MIN] = CreateConVar("l4d_loot_witch_panic_min",	"13", "Min die number for a witch to cause a zombie panic event.", FCVAR_PLUGIN, true, 0.0);
	CVarWitchLoot[LOOT_PANIC_MAX] = CreateConVar("l4d_loot_witch_panic_max",	"14", "Max die number for a witch to cause a zombie panic event.", FCVAR_PLUGIN, true, 0.0);
	CVarWitchLoot[LOOT_witch_MIN] = CreateConVar("l4d_loot_witch_witchspawn_min",	"0", "Min die number for a witch to cause a witch to spawn nearby.", FCVAR_PLUGIN, true, 0.0);
	CVarWitchLoot[LOOT_witch_MAX] = CreateConVar("l4d_loot_witch_witchspawn_max",	"0", "Max die number for a witch to cause a witch to spawn nearby.", FCVAR_PLUGIN, true, 0.0);
	CVarWitchLoot[LOOT_WITCH_MIN] = CreateConVar("l4d_loot_witch_witchspawn_min", "0", "Min die number for a witch to cause a witch to spawn nearby.", FCVAR_PLUGIN, true, 0.0);
	CVarWitchLoot[LOOT_WITCH_MAX] = CreateConVar("l4d_loot_witch_witchspawn_max", "0", "Max die number for a witch to cause a witch to spawn nearby.", FCVAR_PLUGIN, true, 0.0);
	CVarWitchLoot[LOOT_COMMON_MIN] = CreateConVar("l4d_loot_witch_common_min", "0", "Min die number for a witch to cause common infected to spawn nearby.", FCVAR_PLUGIN, true, 0.0);
	CVarWitchLoot[LOOT_COMMON_MAX] = CreateConVar("l4d_loot_witch_common_max", "0", "Max die number for a witch to cause common infected to spawn nearby.", FCVAR_PLUGIN, true, 0.0);
	
	CVarWitchLoot[LOOT_PISTOL_MIN] = CreateConVar("l4d_loot_witch_pistol_min", "0", 	"Min die number for a witch to drop a pistol.", FCVAR_PLUGIN, true, 0.0);
	CVarWitchLoot[LOOT_PISTOL_MAX] = CreateConVar("l4d_loot_witch_pistol_max", "0", 	"Max die number for a witch to drop a pistol.", FCVAR_PLUGIN, true, 0.0);
	CVarWitchLoot[LOOT_SMG_MIN] = CreateConVar("l4d_loot_witch_smg_min", "0", "Min die number for a witch to drop a small machine gun.", FCVAR_PLUGIN, true, 0.0);
	CVarWitchLoot[LOOT_SMG_MAX] = CreateConVar("l4d_loot_witch_smg_max", "0", "Max die number for a witch to drop a small machine gun.", FCVAR_PLUGIN, true, 0.0);
	CVarWitchLoot[LOOT_SHOT_MIN] = CreateConVar("l4d_loot_witch_shotgun_min", "0", "Min die number for a witch to drop a shotgun.", FCVAR_PLUGIN, true, 0.0);
	CVarWitchLoot[LOOT_SHOT_MAX] = CreateConVar("l4d_loot_witch_shotgun_max", "0", "Max die number for a witch to drop a shotgun.", FCVAR_PLUGIN, true, 0.0);
	CVarWitchLoot[LOOT_RIFLE_MIN] = CreateConVar("l4d_loot_witch_rifle_min",	"15", "Min die number for a witch to drop an auto rifle.", FCVAR_PLUGIN, true, 0.0);
	CVarWitchLoot[LOOT_RIFLE_MAX] = CreateConVar("l4d_loot_witch_rifle_max",	"16", "Max die number for a witch to drop an auto rifle.", FCVAR_PLUGIN, true, 0.0);
	CVarWitchLoot[LOOT_AUTOSHOT_MIN] = CreateConVar("l4d_loot_witch_autoshot_min", "17", "Min die number for a witch to drop an auto shotgun.", FCVAR_PLUGIN, true, 0.0);
	CVarWitchLoot[LOOT_AUTOSHOT_MAX] = CreateConVar("l4d_loot_witch_autoshot_max", "18", "Max die number for a witch to drop an auto shotgun.", FCVAR_PLUGIN, true, 0.0);
	CVarWitchLoot[LOOT_SNIPER_MIN] = CreateConVar("l4d_loot_witch_sniper_min", "19", "Min die number for a witch to drop a sniper rifle.", FCVAR_PLUGIN, true, 0.0);
	CVarWitchLoot[LOOT_SNIPER_MAX] = CreateConVar("l4d_loot_witch_sniper_max", "20", "Max die number for a witch to drop a sniper rifle.", FCVAR_PLUGIN, true, 0.0);	
	*/
	
	RegConsoleCmd("sm_loot_sim_infected", Command_SimInfected);
	RegConsoleCmd("sm_loot_print_settings", Command_PrintSettings);
	RegConsoleCmd("sm_loot_load", Command_LoadSettings);
	
	PrintToServer("[DICE] Loading config.");
	AutoExecConfig(true, "l4d_loot_drop");
	
	// Change the enabled flag to the one the convar holds.
	if (GetConVarInt(CVarIsEnabled) == 1) 
	{
		HookEvent("player_death", Event_PlayerDeath);
		PullCVarValues();
	}
	else
	{
		UnhookEvent("player_death", Event_PlayerDeath);
	}
}

public OnMapStart()
{
	PrintToServer("[DICE] Starting map, refreshing settings.");
	PullCVarValues();
}

public Action:Command_LoadSettings(client, args)
{
	PrintToServer("[DICE] Refreshing settings.");
	AutoExecConfig(false, "l4d_loot_drop");
	PullCVarValues();
}

public Action:Command_PrintSettings(client, args)
{
	new String:arg[128]
	
	GetCmdArg(1, arg, sizeof(arg))
	
	if (StrEqual(arg, "hunter", false))
	{
		PrintToServer("[DICE SETTINGS] Hunter");
		PrintSettings(HunterLoot);
	}
	else if (StrEqual(arg, "Smoker", false))
	{
		PrintToServer("[DICE SETTINGS] Smoker");
		PrintSettings(SmokerLoot);
	}
	else if (StrEqual(arg, "Boomer", false))
	{
		PrintToServer("[DICE SETTINGS] Boomer");
		PrintSettings(BoomerLoot);
	}
	else if (StrEqual(arg, "Tank", false))
	{
		PrintToServer("[DICE SETTINGS] Tank");
		PrintSettings(TankLoot);
	}
	/*
	else if (StrEqual(arg, "Witch", false))
	{
		PrintToServer("[DICE SETTINGS] Witch");
		PrintSettings(WitchLoot);
	}
	*/
	else if (StrEqual(arg, "dice", false))
	{
		PrintToServer("[DICE SETTINGS] Dice");
		PrintToServer("Die 1: %i", Dice[0]);
		PrintToServer("Die 2: %i", Dice[1]);
		PrintToServer("Die 3: %i", Dice[2]);
		PrintToServer("Die 4: %i", Dice[3]);
	}
	
	return Plugin_Handled;
}

PrintSettings(diceSettings[31])
{
	PrintToServer("Die Number: id = %i, of %i sides", diceSettings[LOOT_DIENUMBER], Dice[ diceSettings[LOOT_DIENUMBER] - 1]);
	PrintToServer("Dice To Roll: %i", diceSettings[LOOT_DIECOUNT]);
	PrintToServer("Item Count: %i", diceSettings[LOOT_ITEM_COUNT]);
	PrintToServer("Kit Min-Max: %i-%i", diceSettings[LOOT_KIT_MIN], diceSettings[LOOT_KIT_MAX]);
	PrintToServer("Pills Min-Max: %i-%i", diceSettings[LOOT_PILLS_MIN], diceSettings[LOOT_PILLS_MAX]);
	PrintToServer("Molly Min-Max: %i-%i", diceSettings[LOOT_MOLLY_MIN], diceSettings[LOOT_MOLLY_MAX]);
	PrintToServer("Pipe Min-Max: %i-%i", diceSettings[LOOT_PIPE_MIN], diceSettings[LOOT_PIPE_MAX]);
	PrintToServer("Pistol Min-Max: %i-%i", diceSettings[LOOT_PISTOL_MIN], diceSettings[LOOT_PISTOL_MAX]);
	PrintToServer("SMG Min-Max: %i-%i", diceSettings[LOOT_SMG_MIN], diceSettings[LOOT_SMG_MAX]);
	PrintToServer("Shotgun Min-Max: %i-%i", diceSettings[LOOT_SHOT_MIN], diceSettings[LOOT_SHOT_MAX]);
	PrintToServer("Rifle Min-Max: %i-%i", diceSettings[LOOT_RIFLE_MIN], diceSettings[LOOT_RIFLE_MAX]);
	PrintToServer("Auto Shotgun Min-Max: %i-%i", diceSettings[LOOT_AUTOSHOT_MIN], diceSettings[LOOT_AUTOSHOT_MAX]);
	PrintToServer("Sniper Rifle Min-Max: %i-%i", diceSettings[LOOT_SNIPER_MIN], diceSettings[LOOT_SNIPER_MAX]);
	PrintToServer("Panic Event Min-Max: %i-%i", diceSettings[LOOT_PANIC_MIN], diceSettings[LOOT_PANIC_MAX]);
	PrintToServer("Tank Spawn Min-Max: %i-%i", diceSettings[LOOT_TANK_MIN], diceSettings[LOOT_TANK_MAX]);
	PrintToServer("Witch Spawn Min-Max: %i-%i", diceSettings[LOOT_WITCH_MIN], diceSettings[LOOT_WITCH_MAX]);
	PrintToServer("Common Infected Spawn Min-Max: %i-%i", diceSettings[LOOT_COMMON_MIN], diceSettings[LOOT_COMMON_MAX]);	
}

public Action:Command_SimInfected(client, args)
{
	new String:arg[128]
	
	/*
	if (!IsClientConnected(client) && !IsClientInGame(client))
		return Plugin_Handled;

	if (IsClientBot(client))
		return Plugin_Handled;
	*/
	
	GetCmdArg(1, arg, sizeof(arg))
	
	if (StrEqual(arg, "hunter", false))
	{

		PrintToServer("[DICE SIM] Hunter killed: Rolling for %i items.", HunterLoot[LOOT_ITEM_COUNT]);
	
		for (new i = 0; i < HunterLoot[LOOT_ITEM_COUNT]; i++)
		{
			PrintToServer("[DICE SIM] Rolling item %i, die has %i sides, %i dice will be rolled.", i + 1, Dice[HunterLoot[LOOT_DIENUMBER] - 1], HunterLoot[LOOT_DIECOUNT]);
		
			SpawnItemFromDieResult(client, 
								   HunterLoot,
								   RollDice(HunterLoot[LOOT_DIECOUNT], HunterLoot[LOOT_DIENUMBER], true), true);
		}					  
	}
	else if (StrEqual(arg, "Smoker", false))
	{
		PrintToServer("[DICE SIM] Smoker killed: Rolling for %i items.", SmokerLoot[LOOT_ITEM_COUNT]);
	
		for (new i = 0; i < SmokerLoot[LOOT_ITEM_COUNT]; i++)
		{
			PrintToServer("[DICE SIM] Rolling item %i, die has %i sides, %i dice will be rolled.", i + 1, Dice[SmokerLoot[LOOT_DIENUMBER] - 1], SmokerLoot[LOOT_DIECOUNT]);
		
			SpawnItemFromDieResult(client, 
								   SmokerLoot,
								   RollDice(SmokerLoot[LOOT_DIECOUNT], SmokerLoot[LOOT_DIENUMBER], true), true);
		}
	}
	else if (StrEqual(arg, "Boomer", false))
	{
		PrintToServer("[DICE SIM] Boomer killed: Rolling for %i items.", BoomerLoot[LOOT_ITEM_COUNT]);
	
		for (new i = 0; i < BoomerLoot[LOOT_ITEM_COUNT]; i++)
		{
			PrintToServer("[DICE SIM] Rolling item %i, die has %i sides, %i dice will be rolled.", i + 1, Dice[BoomerLoot[LOOT_DIENUMBER] - 1], BoomerLoot[LOOT_DIECOUNT]);
		
			SpawnItemFromDieResult(client, 
								   BoomerLoot,
								   RollDice(BoomerLoot[LOOT_DIECOUNT], BoomerLoot[LOOT_DIENUMBER], true), true);
		}
		
	}
	else if (StrEqual(arg, "Tank", false))
	{
		PrintToServer("[DICE SIM] Tank killed: Rolling for %i items.", TankLoot[LOOT_ITEM_COUNT]);
	
		for (new i = 0; i < TankLoot[LOOT_ITEM_COUNT]; i++)
		{
			PrintToServer("[DICE SIM] Rolling item %i, die has %i sides, %i dice will be rolled.", i + 1, Dice[TankLoot[LOOT_DIENUMBER] - 1], TankLoot[LOOT_DIECOUNT]);
			
			SpawnItemFromDieResult(client, 
								   TankLoot,
								   RollDice(TankLoot[LOOT_DIECOUNT], TankLoot[LOOT_DIENUMBER], true), true);
		}

	}
	/*
	else if (StrEqual(arg, "Witch", false))
	{
		PrintToServer("[DICE SIM] Witch killed: Rolling for %i items.", TankLoot[LOOT_ITEM_COUNT]);
	
		for (new i = 0; i < TankLoot[LOOT_ITEM_COUNT]; i++)
		{
			PrintToServer("[DICE SIM] Rolling item %i, die has %i sides, %i dice will be rolled.", i + 1, Dice[WitchLoot[LOOT_DIENUMBER] - 1], WitchLoot[LOOT_DIECOUNT]);
			
			SpawnItemFromDieResult(client, 
								   WitchLoot,
								   RollDice(WitchLoot[LOOT_DIECOUNT], WitchLoot[LOOT_DIENUMBER], true), true);
		}

	}
	*/
	
	return Plugin_Handled;
}

public Loot_EnableDisable(Handle:hVariable, const String:strOldValue[], const String:strNewValue[])
{
    // Change the enabled flag to the one the convar holds.
    if (GetConVarInt(CVarIsEnabled) == 1) 
	{
		HookEvent("player_death", Event_PlayerDeath);
	}
    else
	{
		UnhookEvent("player_death", Event_PlayerDeath);
	}
}

PullCVarValues()
{
	Dice[0] = GetConVarInt(CVarDieSides[0]);
	Dice[1] = GetConVarInt(CVarDieSides[1]);
	Dice[2] = GetConVarInt(CVarDieSides[2]);
	Dice[3] = GetConVarInt(CVarDieSides[3]);
	
	HunterLoot[LOOT_DIENUMBER] = GetConVarInt(CVarHunterLoot[LOOT_DIENUMBER])
	HunterLoot[LOOT_DIECOUNT] = GetConVarInt(CVarHunterLoot[LOOT_DIECOUNT])
	HunterLoot[LOOT_KIT_MIN] = GetConVarInt(CVarHunterLoot[LOOT_KIT_MIN])
	HunterLoot[LOOT_KIT_MAX] = GetConVarInt(CVarHunterLoot[LOOT_KIT_MAX])
	HunterLoot[LOOT_PILLS_MIN] = GetConVarInt(CVarHunterLoot[LOOT_PILLS_MIN])
	HunterLoot[LOOT_PILLS_MAX] = GetConVarInt(CVarHunterLoot[LOOT_PILLS_MAX])
	HunterLoot[LOOT_MOLLY_MIN] = GetConVarInt(CVarHunterLoot[LOOT_MOLLY_MIN])
	HunterLoot[LOOT_MOLLY_MAX] = GetConVarInt(CVarHunterLoot[LOOT_MOLLY_MAX])
	HunterLoot[LOOT_PIPE_MIN] = GetConVarInt(CVarHunterLoot[LOOT_PIPE_MIN])
	HunterLoot[LOOT_PIPE_MAX] = GetConVarInt(CVarHunterLoot[LOOT_PIPE_MAX])
	HunterLoot[LOOT_ITEM_COUNT] = GetConVarInt(CVarHunterLoot[LOOT_ITEM_COUNT])

	HunterLoot[LOOT_PANIC_MIN] = GetConVarInt(CVarHunterLoot[LOOT_PANIC_MIN])
	HunterLoot[LOOT_PANIC_MAX] = GetConVarInt(CVarHunterLoot[LOOT_PANIC_MAX])
	HunterLoot[LOOT_TANK_MIN] = GetConVarInt(CVarHunterLoot[LOOT_TANK_MIN])
	HunterLoot[LOOT_TANK_MAX] = GetConVarInt(CVarHunterLoot[LOOT_TANK_MAX])
	HunterLoot[LOOT_WITCH_MIN] = GetConVarInt(CVarHunterLoot[LOOT_WITCH_MIN])
	HunterLoot[LOOT_WITCH_MAX] = GetConVarInt(CVarHunterLoot[LOOT_WITCH_MAX])
	HunterLoot[LOOT_COMMON_MIN] = GetConVarInt(CVarHunterLoot[LOOT_COMMON_MIN])
	HunterLoot[LOOT_COMMON_MAX] = GetConVarInt(CVarHunterLoot[LOOT_COMMON_MAX])
	
	HunterLoot[LOOT_PISTOL_MIN] = GetConVarInt(CVarHunterLoot[LOOT_PISTOL_MIN])
	HunterLoot[LOOT_PISTOL_MAX] = GetConVarInt(CVarHunterLoot[LOOT_PISTOL_MAX])
	HunterLoot[LOOT_SMG_MIN] = GetConVarInt(CVarHunterLoot[LOOT_SMG_MIN])
	HunterLoot[LOOT_SMG_MAX] = GetConVarInt(CVarHunterLoot[LOOT_SMG_MAX])
	HunterLoot[LOOT_SHOT_MIN] = GetConVarInt(CVarHunterLoot[LOOT_SHOT_MIN])
	HunterLoot[LOOT_SHOT_MAX] = GetConVarInt(CVarHunterLoot[LOOT_SHOT_MAX])
	HunterLoot[LOOT_RIFLE_MIN] = GetConVarInt(CVarHunterLoot[LOOT_RIFLE_MIN])
	HunterLoot[LOOT_RIFLE_MAX] = GetConVarInt(CVarHunterLoot[LOOT_RIFLE_MAX])
	HunterLoot[LOOT_AUTOSHOT_MIN] = GetConVarInt(CVarHunterLoot[LOOT_AUTOSHOT_MIN])
	HunterLoot[LOOT_AUTOSHOT_MAX] = GetConVarInt(CVarHunterLoot[LOOT_AUTOSHOT_MAX])
	HunterLoot[LOOT_SNIPER_MIN] = GetConVarInt(CVarHunterLoot[LOOT_SNIPER_MIN])
	HunterLoot[LOOT_SNIPER_MAX] = GetConVarInt(CVarHunterLoot[LOOT_SNIPER_MAX])
	
	
	
	BoomerLoot[LOOT_DIENUMBER] = GetConVarInt(CVarBoomerLoot[LOOT_DIENUMBER])
	BoomerLoot[LOOT_DIECOUNT] = GetConVarInt(CVarBoomerLoot[LOOT_DIECOUNT])
	BoomerLoot[LOOT_KIT_MIN] = GetConVarInt(CVarBoomerLoot[LOOT_KIT_MIN])
	BoomerLoot[LOOT_KIT_MAX] = GetConVarInt(CVarBoomerLoot[LOOT_KIT_MAX])
	BoomerLoot[LOOT_PILLS_MIN] = GetConVarInt(CVarBoomerLoot[LOOT_PILLS_MIN])
	BoomerLoot[LOOT_PILLS_MAX] = GetConVarInt(CVarBoomerLoot[LOOT_PILLS_MAX])
	BoomerLoot[LOOT_MOLLY_MIN] = GetConVarInt(CVarBoomerLoot[LOOT_MOLLY_MIN])
	BoomerLoot[LOOT_MOLLY_MAX] = GetConVarInt(CVarBoomerLoot[LOOT_MOLLY_MAX])
	BoomerLoot[LOOT_PIPE_MIN] = GetConVarInt(CVarBoomerLoot[LOOT_PIPE_MIN])
	BoomerLoot[LOOT_PIPE_MAX] = GetConVarInt(CVarBoomerLoot[LOOT_PIPE_MAX])
	BoomerLoot[LOOT_ITEM_COUNT] = GetConVarInt(CVarBoomerLoot[LOOT_ITEM_COUNT])
	
	BoomerLoot[LOOT_PANIC_MIN] = GetConVarInt(CVarBoomerLoot[LOOT_PANIC_MIN])
	BoomerLoot[LOOT_PANIC_MAX] = GetConVarInt(CVarBoomerLoot[LOOT_PANIC_MAX])
	BoomerLoot[LOOT_TANK_MIN] = GetConVarInt(CVarBoomerLoot[LOOT_TANK_MIN])
	BoomerLoot[LOOT_TANK_MAX] = GetConVarInt(CVarBoomerLoot[LOOT_TANK_MAX])
	BoomerLoot[LOOT_WITCH_MIN] = GetConVarInt(CVarBoomerLoot[LOOT_WITCH_MIN])
	BoomerLoot[LOOT_WITCH_MAX] = GetConVarInt(CVarBoomerLoot[LOOT_WITCH_MAX])
	BoomerLoot[LOOT_COMMON_MIN] = GetConVarInt(CVarBoomerLoot[LOOT_COMMON_MIN])
	BoomerLoot[LOOT_COMMON_MAX] = GetConVarInt(CVarBoomerLoot[LOOT_COMMON_MAX])
	
	BoomerLoot[LOOT_PISTOL_MIN] = GetConVarInt(CVarBoomerLoot[LOOT_PISTOL_MIN])
	BoomerLoot[LOOT_PISTOL_MAX] = GetConVarInt(CVarBoomerLoot[LOOT_PISTOL_MAX])
	BoomerLoot[LOOT_SMG_MIN] = GetConVarInt(CVarBoomerLoot[LOOT_SMG_MIN])
	BoomerLoot[LOOT_SMG_MAX] = GetConVarInt(CVarBoomerLoot[LOOT_SMG_MAX])
	BoomerLoot[LOOT_SHOT_MIN] = GetConVarInt(CVarBoomerLoot[LOOT_SHOT_MIN])
	BoomerLoot[LOOT_SHOT_MAX] = GetConVarInt(CVarBoomerLoot[LOOT_SHOT_MAX])
	BoomerLoot[LOOT_RIFLE_MIN] = GetConVarInt(CVarBoomerLoot[LOOT_RIFLE_MIN])
	BoomerLoot[LOOT_RIFLE_MAX] = GetConVarInt(CVarBoomerLoot[LOOT_RIFLE_MAX])
	BoomerLoot[LOOT_AUTOSHOT_MIN] = GetConVarInt(CVarBoomerLoot[LOOT_AUTOSHOT_MIN])
	BoomerLoot[LOOT_AUTOSHOT_MAX] = GetConVarInt(CVarBoomerLoot[LOOT_AUTOSHOT_MAX])
	BoomerLoot[LOOT_SNIPER_MIN] = GetConVarInt(CVarBoomerLoot[LOOT_SNIPER_MIN])
	BoomerLoot[LOOT_SNIPER_MAX] = GetConVarInt(CVarBoomerLoot[LOOT_SNIPER_MAX])
	
	
	SmokerLoot[LOOT_DIENUMBER] = GetConVarInt(CVarSmokerLoot[LOOT_DIENUMBER])
	SmokerLoot[LOOT_DIECOUNT] = GetConVarInt(CVarSmokerLoot[LOOT_DIECOUNT])
	SmokerLoot[LOOT_KIT_MIN] = GetConVarInt(CVarSmokerLoot[LOOT_KIT_MIN])
	SmokerLoot[LOOT_KIT_MAX] = GetConVarInt(CVarSmokerLoot[LOOT_KIT_MAX])
	SmokerLoot[LOOT_PILLS_MIN] = GetConVarInt(CVarSmokerLoot[LOOT_PILLS_MIN])
	SmokerLoot[LOOT_PILLS_MAX] = GetConVarInt(CVarSmokerLoot[LOOT_PILLS_MAX])
	SmokerLoot[LOOT_MOLLY_MIN] = GetConVarInt(CVarSmokerLoot[LOOT_MOLLY_MIN])
	SmokerLoot[LOOT_MOLLY_MAX] = GetConVarInt(CVarSmokerLoot[LOOT_MOLLY_MAX])
	SmokerLoot[LOOT_PIPE_MIN] = GetConVarInt(CVarSmokerLoot[LOOT_PIPE_MIN])
	SmokerLoot[LOOT_PIPE_MAX] = GetConVarInt(CVarSmokerLoot[LOOT_PIPE_MAX])
	SmokerLoot[LOOT_ITEM_COUNT] = GetConVarInt(CVarSmokerLoot[LOOT_ITEM_COUNT])

	SmokerLoot[LOOT_PANIC_MIN] = GetConVarInt(CVarSmokerLoot[LOOT_PANIC_MIN])
	SmokerLoot[LOOT_PANIC_MAX] = GetConVarInt(CVarSmokerLoot[LOOT_PANIC_MAX])
	SmokerLoot[LOOT_TANK_MIN] = GetConVarInt(CVarSmokerLoot[LOOT_TANK_MIN])
	SmokerLoot[LOOT_TANK_MAX] = GetConVarInt(CVarSmokerLoot[LOOT_TANK_MAX])
	SmokerLoot[LOOT_WITCH_MIN] = GetConVarInt(CVarSmokerLoot[LOOT_WITCH_MIN])
	SmokerLoot[LOOT_WITCH_MAX] = GetConVarInt(CVarSmokerLoot[LOOT_WITCH_MAX])
	SmokerLoot[LOOT_COMMON_MIN] = GetConVarInt(CVarSmokerLoot[LOOT_COMMON_MIN])
	SmokerLoot[LOOT_COMMON_MAX] = GetConVarInt(CVarSmokerLoot[LOOT_COMMON_MAX])
	
	SmokerLoot[LOOT_PISTOL_MIN] = GetConVarInt(CVarSmokerLoot[LOOT_PISTOL_MIN])
	SmokerLoot[LOOT_PISTOL_MAX] = GetConVarInt(CVarSmokerLoot[LOOT_PISTOL_MAX])
	SmokerLoot[LOOT_SMG_MIN] = GetConVarInt(CVarSmokerLoot[LOOT_SMG_MIN])
	SmokerLoot[LOOT_SMG_MAX] = GetConVarInt(CVarSmokerLoot[LOOT_SMG_MAX])
	SmokerLoot[LOOT_SHOT_MIN] = GetConVarInt(CVarSmokerLoot[LOOT_SHOT_MIN])
	SmokerLoot[LOOT_SHOT_MAX] = GetConVarInt(CVarSmokerLoot[LOOT_SHOT_MAX])
	SmokerLoot[LOOT_RIFLE_MIN] = GetConVarInt(CVarSmokerLoot[LOOT_RIFLE_MIN])
	SmokerLoot[LOOT_RIFLE_MAX] = GetConVarInt(CVarSmokerLoot[LOOT_RIFLE_MAX])
	SmokerLoot[LOOT_AUTOSHOT_MIN] = GetConVarInt(CVarSmokerLoot[LOOT_AUTOSHOT_MIN])
	SmokerLoot[LOOT_AUTOSHOT_MAX] = GetConVarInt(CVarSmokerLoot[LOOT_AUTOSHOT_MAX])
	SmokerLoot[LOOT_SNIPER_MIN] = GetConVarInt(CVarSmokerLoot[LOOT_SNIPER_MIN])
	SmokerLoot[LOOT_SNIPER_MAX] = GetConVarInt(CVarSmokerLoot[LOOT_SNIPER_MAX])
	
	
	TankLoot[LOOT_DIENUMBER] = GetConVarInt(CVarTankLoot[LOOT_DIENUMBER])
	TankLoot[LOOT_DIECOUNT] = GetConVarInt(CVarTankLoot[LOOT_DIECOUNT])
	TankLoot[LOOT_KIT_MIN] = GetConVarInt(CVarTankLoot[LOOT_KIT_MIN])
	TankLoot[LOOT_KIT_MAX] = GetConVarInt(CVarTankLoot[LOOT_KIT_MAX])
	TankLoot[LOOT_PILLS_MIN] = GetConVarInt(CVarTankLoot[LOOT_PILLS_MIN])
	TankLoot[LOOT_PILLS_MAX] = GetConVarInt(CVarTankLoot[LOOT_PILLS_MAX])
	TankLoot[LOOT_MOLLY_MIN] = GetConVarInt(CVarTankLoot[LOOT_MOLLY_MIN])
	TankLoot[LOOT_MOLLY_MAX] = GetConVarInt(CVarTankLoot[LOOT_MOLLY_MAX])
	TankLoot[LOOT_PIPE_MIN] = GetConVarInt(CVarTankLoot[LOOT_PIPE_MIN])
	TankLoot[LOOT_PIPE_MAX] = GetConVarInt(CVarTankLoot[LOOT_PIPE_MAX])
	TankLoot[LOOT_ITEM_COUNT] = GetConVarInt(CVarTankLoot[LOOT_ITEM_COUNT])
	
	TankLoot[LOOT_PANIC_MIN] = GetConVarInt(CVarTankLoot[LOOT_PANIC_MIN])
	TankLoot[LOOT_PANIC_MAX] = GetConVarInt(CVarTankLoot[LOOT_PANIC_MAX])
	TankLoot[LOOT_TANK_MIN] = GetConVarInt(CVarTankLoot[LOOT_TANK_MIN])
	TankLoot[LOOT_TANK_MAX] = GetConVarInt(CVarTankLoot[LOOT_TANK_MAX])
	TankLoot[LOOT_WITCH_MIN] = GetConVarInt(CVarTankLoot[LOOT_WITCH_MIN])
	TankLoot[LOOT_WITCH_MAX] = GetConVarInt(CVarTankLoot[LOOT_WITCH_MAX])
	TankLoot[LOOT_COMMON_MIN] = GetConVarInt(CVarTankLoot[LOOT_COMMON_MIN])
	TankLoot[LOOT_COMMON_MAX] = GetConVarInt(CVarTankLoot[LOOT_COMMON_MAX])
	
	TankLoot[LOOT_PISTOL_MIN] = GetConVarInt(CVarTankLoot[LOOT_PISTOL_MIN])
	TankLoot[LOOT_PISTOL_MAX] = GetConVarInt(CVarTankLoot[LOOT_PISTOL_MAX])
	TankLoot[LOOT_SMG_MIN] = GetConVarInt(CVarTankLoot[LOOT_SMG_MIN])
	TankLoot[LOOT_SMG_MAX] = GetConVarInt(CVarTankLoot[LOOT_SMG_MAX])
	TankLoot[LOOT_SHOT_MIN] = GetConVarInt(CVarTankLoot[LOOT_SHOT_MIN])
	TankLoot[LOOT_SHOT_MAX] = GetConVarInt(CVarTankLoot[LOOT_SHOT_MAX])
	TankLoot[LOOT_RIFLE_MIN] = GetConVarInt(CVarTankLoot[LOOT_RIFLE_MIN])
	TankLoot[LOOT_RIFLE_MAX] = GetConVarInt(CVarTankLoot[LOOT_RIFLE_MAX])
	TankLoot[LOOT_AUTOSHOT_MIN] = GetConVarInt(CVarTankLoot[LOOT_AUTOSHOT_MIN])
	TankLoot[LOOT_AUTOSHOT_MAX] = GetConVarInt(CVarTankLoot[LOOT_AUTOSHOT_MAX])
	TankLoot[LOOT_SNIPER_MIN] = GetConVarInt(CVarTankLoot[LOOT_SNIPER_MIN])
	TankLoot[LOOT_SNIPER_MAX] = GetConVarInt(CVarTankLoot[LOOT_SNIPER_MAX])
	
	/*
	WitchLoot[LOOT_DIENUMBER] = GetConVarInt(CVarWitchLoot[LOOT_DIENUMBER])
	WitchLoot[LOOT_DIECOUNT] = GetConVarInt(CVarWitchLoot[LOOT_DIECOUNT])
	WitchLoot[LOOT_KIT_MIN] = GetConVarInt(CVarWitchLoot[LOOT_KIT_MIN])
	WitchLoot[LOOT_KIT_MAX] = GetConVarInt(CVarWitchLoot[LOOT_KIT_MAX])
	WitchLoot[LOOT_PILLS_MIN] = GetConVarInt(CVarWitchLoot[LOOT_PILLS_MIN])
	WitchLoot[LOOT_PILLS_MAX] = GetConVarInt(CVarWitchLoot[LOOT_PILLS_MAX])
	WitchLoot[LOOT_MOLLY_MIN] = GetConVarInt(CVarWitchLoot[LOOT_MOLLY_MIN])
	WitchLoot[LOOT_MOLLY_MAX] = GetConVarInt(CVarWitchLoot[LOOT_MOLLY_MAX])
	WitchLoot[LOOT_PIPE_MIN] = GetConVarInt(CVarWitchLoot[LOOT_PIPE_MIN])
	WitchLoot[LOOT_PIPE_MAX] = GetConVarInt(CVarWitchLoot[LOOT_PIPE_MAX])
	WitchLoot[LOOT_ITEM_COUNT] = GetConVarInt(CVarWitchLoot[LOOT_ITEM_COUNT])
	
	WitchLoot[LOOT_PANIC_MIN] = GetConVarInt(CVarWitchLoot[LOOT_PANIC_MIN])
	WitchLoot[LOOT_PANIC_MAX] = GetConVarInt(CVarWitchLoot[LOOT_PANIC_MAX])
	WitchLoot[LOOT_Witch_MIN] = GetConVarInt(CVarWitchLoot[LOOT_Witch_MIN])
	WitchLoot[LOOT_Witch_MAX] = GetConVarInt(CVarWitchLoot[LOOT_Witch_MAX])
	WitchLoot[LOOT_WITCH_MIN] = GetConVarInt(CVarWitchLoot[LOOT_WITCH_MIN])
	WitchLoot[LOOT_WITCH_MAX] = GetConVarInt(CVarWitchLoot[LOOT_WITCH_MAX])
	WitchLoot[LOOT_COMMON_MIN] = GetConVarInt(CVarWitchLoot[LOOT_COMMON_MIN])
	WitchLoot[LOOT_COMMON_MAX] = GetConVarInt(CVarWitchLoot[LOOT_COMMON_MAX])
	
	WitchLoot[LOOT_PISTOL_MIN] = GetConVarInt(CVarWitchLoot[LOOT_PISTOL_MIN])
	WitchLoot[LOOT_PISTOL_MAX] = GetConVarInt(CVarWitchLoot[LOOT_PISTOL_MAX])
	WitchLoot[LOOT_SMG_MIN] = GetConVarInt(CVarWitchLoot[LOOT_SMG_MIN])
	WitchLoot[LOOT_SMG_MAX] = GetConVarInt(CVarWitchLoot[LOOT_SMG_MAX])
	WitchLoot[LOOT_SHOT_MIN] = GetConVarInt(CVarWitchLoot[LOOT_SHOT_MIN])
	WitchLoot[LOOT_SHOT_MAX] = GetConVarInt(CVarWitchLoot[LOOT_SHOT_MAX])
	WitchLoot[LOOT_RIFLE_MIN] = GetConVarInt(CVarWitchLoot[LOOT_RIFLE_MIN])
	WitchLoot[LOOT_RIFLE_MAX] = GetConVarInt(CVarWitchLoot[LOOT_RIFLE_MAX])
	WitchLoot[LOOT_AUTOSHOT_MIN] = GetConVarInt(CVarWitchLoot[LOOT_AUTOSHOT_MIN])
	WitchLoot[LOOT_AUTOSHOT_MAX] = GetConVarInt(CVarWitchLoot[LOOT_AUTOSHOT_MAX])
	WitchLoot[LOOT_SNIPER_MIN] = GetConVarInt(CVarWitchLoot[LOOT_SNIPER_MIN])
	WitchLoot[LOOT_SNIPER_MAX] = GetConVarInt(CVarWitchLoot[LOOT_SNIPER_MAX])
	*/
}

public Action:Event_PlayerDeath(Handle:hEvent, const String:strName[], bool:DontBroadcast)
{
	decl String:strBuffer[48];
	new ClientId    = 0;
	
	ClientId = GetClientOfUserId(GetEventInt(hEvent, "userid"));
	
	if (ClientId == 0) 
	{
		// We had 0 so it MAY be a witch, check.
		GetEntityNetClass(GetEventInt(hEvent, "entityid"), strBuffer, sizeof(strBuffer));
		if (StrEqual(strBuffer, "Witch", false))
		{
			// TODO: Add witch functionallity
		}
		
		return Plugin_Continue;
	}
	
	new class = GetEntProp(ClientId, Prop_Send, "m_zombieClass");
   
	if (class == ZOMBIECLASS_HUNTER)
	{

		LogMessage("[DICE] Hunter killed: Rolling for %i items.", HunterLoot[LOOT_ITEM_COUNT]);
	
		for (new i = 0; i < HunterLoot[LOOT_ITEM_COUNT]; i++)
		{
			LogMessage("[DICE] Rolling item %i, die has %i sides, %i dice will be rolled.", i + 1, Dice[HunterLoot[LOOT_DIENUMBER] - 1], HunterLoot[LOOT_DIECOUNT]);
		
			SpawnItemFromDieResult(ClientId, 
								   HunterLoot,
								   RollDice(HunterLoot[LOOT_DIECOUNT], HunterLoot[LOOT_DIENUMBER]));
		}					  
	}
	else if (class == ZOMBIECLASS_SMOKER)
	{
		LogMessage("[DICE] Smoker killed: Rolling for %i items.", SmokerLoot[LOOT_ITEM_COUNT]);
	
		for (new i = 0; i < SmokerLoot[LOOT_ITEM_COUNT]; i++)
		{
			LogMessage("[DICE] Rolling item %i, die has %i sides, %i dice will be rolled.", i + 1, Dice[SmokerLoot[LOOT_DIENUMBER] - 1], SmokerLoot[LOOT_DIECOUNT]);
		
			SpawnItemFromDieResult(ClientId, 
								   SmokerLoot,
								   RollDice(SmokerLoot[LOOT_DIECOUNT], SmokerLoot[LOOT_DIENUMBER]));
		}
	}
	else if (class == ZOMBIECLASS_BOOMER)
	{
		LogMessage("[DICE] Boomer killed: Rolling for %i items.", BoomerLoot[LOOT_ITEM_COUNT]);
	
		for (new i = 0; i < BoomerLoot[LOOT_ITEM_COUNT]; i++)
		{
			LogMessage("[DICE] Rolling item %i, die has %i sides, %i dice will be rolled.", i + 1, Dice[BoomerLoot[LOOT_DIENUMBER] - 1], BoomerLoot[LOOT_DIECOUNT]);
		
			SpawnItemFromDieResult(ClientId, 
								   BoomerLoot,
								   RollDice(BoomerLoot[LOOT_DIECOUNT], BoomerLoot[LOOT_DIENUMBER]));
		}
		
	}
	else if (class == ZOMBIECLASS_TANK)
	{
		LogMessage("[DICE] Tank killed: Rolling for %i items.", TankLoot[LOOT_ITEM_COUNT]);
	
		for (new i = 0; i < TankLoot[LOOT_ITEM_COUNT]; i++)
		{
			LogMessage("[DICE] Rolling item %i, die has %i sides, %i dice will be rolled.", i + 1, Dice[TankLoot[LOOT_DIENUMBER] - 1], TankLoot[LOOT_DIECOUNT]);
			
			SpawnItemFromDieResult(ClientId, 
								   TankLoot,
								   RollDice(TankLoot[LOOT_DIECOUNT], TankLoot[LOOT_DIENUMBER]));
		}

	}
	
	return Plugin_Continue;
}

ExecuteCommand(Client, String:strCommand[], String:strParam1[])
{
	new flags = GetCommandFlags(strCommand);
    
	SetCommandFlags(strCommand, flags & ~FCVAR_CHEAT);
	FakeClientCommand(Client, "%s %s", strCommand, strParam1);
	SetCommandFlags(strCommand, flags);
}

ForcePanicEvent(client)
{
	new String:command[] = "director_force_panic_event";
	new flags = GetCommandFlags(command);
	
	SetCommandFlags(command, flags & ~FCVAR_CHEAT);
	FakeClientCommand(client, command);
	SetCommandFlags(command, flags);
}

TellHumans(String:msg[])
{
	for (new i = 1; i <= MaxClients; i++)
	{
		if (!IsClientInGame(i))
			continue;
		
		if (GetClientTeam(i) == 2)
			PrintHintText(i, msg);
	} 
	
}

Give(Client, String:itemId[], String:playerMsg[], bool:sim = false)
{
	if (sim == false)
	{
		ExecuteCommand(Client, "give", itemId);
		
		LogMessage("[DICE] Spawned %s.", itemId);
		
		if (!StrEqual(playerMsg, ""))
			TellHumans(playerMsg);
	}
	else
		PrintToServer("[DICE SIM] Spawned %s.", itemId);
	
}

RollDice(dieCount, dieId, bool:sim = false)
{
	
	if (dieId == 0)
		return 0;
	
	new dieSides = Dice[dieId - 1];
	new result = 0;
	
	for (new i = 0; i < dieCount; i++)
	{
		new tempResult = GetRandomInt(0, dieSides);
		
		if (tempResult != 0)
			result += tempResult;
		
		if (sim == false)
			LogMessage("[DICE] Die %i, Result: %i, Total: %i", i + 1, tempResult, result);
		else
			PrintToServer("[DICE SIM] Die %i, Result: %i, Total: %i", i + 1, tempResult, result);
	}
	
	return result;
}

SpawnItemFromDieResult(client, diceSettings[31], dieResult, bool:sim = false)
{
	if (dieResult != 0)
	{
		PrintSettings(diceSettings);
		
		if (dieResult >= diceSettings[LOOT_KIT_MIN] && dieResult <= diceSettings[LOOT_KIT_MAX])
			Give(client, "first_aid_kit", "You hear something drop to the ground...", sim);
		
		else if (dieResult >= diceSettings[LOOT_MOLLY_MIN] && dieResult <= diceSettings[LOOT_MOLLY_MAX])
			Give(client, "molotov", "You hear something drop to the ground...", sim);
		
		else if (dieResult >= diceSettings[LOOT_PIPE_MIN] && dieResult <= diceSettings[LOOT_PIPE_MAX])
			Give(client, "pipe_bomb", "You hear something drop to the ground...", sim);
		
		else if (dieResult >= diceSettings[LOOT_PILLS_MIN] && dieResult <= diceSettings[LOOT_PILLS_MAX])
			Give(client, "pain_pills", "You hear something drop to the ground...", sim);
		
		else if (dieResult >= diceSettings[LOOT_PANIC_MIN] && dieResult <= diceSettings[LOOT_PANIC_MAX])
		{
			if (!sim)
			{
				ForcePanicEvent(client);
				LogMessage("[DICE] Spawned Panic Event.");
				TellHumans("You hear the sound of many footsteps...");
			}
			else
				PrintToServer("[DICE SIM] Spawned Panic Event");
		}
		
		else if (dieResult >= diceSettings[LOOT_TANK_MIN] && dieResult <= diceSettings[LOOT_TANK_MAX])
		{
			if (!sim)
			{
				ExecuteCommand(client, "z_spawn", "tank auto");
				TellHumans("You feel the ground shake...");
				LogMessage("[DICE] Spawned Tank.");
			}
			else
				PrintToServer("[DICE SIM] Spawned Tank");
		}
		else if (dieResult >= diceSettings[LOOT_WITCH_MIN] && dieResult <= diceSettings[LOOT_WITCH_MAX])
		{
			if (!sim)
			{
				ExecuteCommand(client, "z_spawn", "witch auto");
				
				LogMessage("[DICE] Spawned Witch.");
			}
			else
				PrintToServer("[DICE SIM] Spawned Witch");
		}
		else if (dieResult >= diceSettings[LOOT_COMMON_MIN] && dieResult <= diceSettings[LOOT_COMMON_MAX])
		{
			if (!sim)
			{
				ExecuteCommand(client, "z_spawn", "common");
				ExecuteCommand(client, "z_spawn", "common");
				ExecuteCommand(client, "z_spawn", "common auto");
				ExecuteCommand(client, "z_spawn", "common");
				ExecuteCommand(client, "z_spawn", "common");
				ExecuteCommand(client, "z_spawn", "common auto");
				ExecuteCommand(client, "z_spawn", "common");
				ExecuteCommand(client, "z_spawn", "common");
				ExecuteCommand(client, "z_spawn", "common auto");
				ExecuteCommand(client, "z_spawn", "common");
				
				LogMessage("[DICE] Spawned Commons.");
			}
			else
				PrintToServer("[DICE SIM] Spawned Commons");
		}
		else if (dieResult >= diceSettings[LOOT_PISTOL_MIN] && dieResult <= diceSettings[LOOT_PISTOL_MAX])
			Give(client, "pistol", "You hear something drop to the ground...", sim);
		
		else if (dieResult >= diceSettings[LOOT_SMG_MIN] && dieResult <= diceSettings[LOOT_SMG_MAX])
			Give(client, "smg", "You hear something drop to the ground...", sim);
		
		else if (dieResult >= diceSettings[LOOT_SHOT_MIN] && dieResult <= diceSettings[LOOT_SHOT_MAX])
			Give(client, "pumpshotgun", "You hear something drop to the ground...", sim);
		
		else if (dieResult >= diceSettings[LOOT_RIFLE_MIN] && dieResult <= diceSettings[LOOT_RIFLE_MAX])
			Give(client, "rifle", "You hear something drop to the ground...", sim);
		
		else if (dieResult >= diceSettings[LOOT_AUTOSHOT_MIN] && dieResult <= diceSettings[LOOT_AUTOSHOT_MAX])
			Give(client, "autoshotgun", "You hear something drop to the ground...", sim);
		
		else if (dieResult >= diceSettings[LOOT_SNIPER_MIN] && dieResult <= diceSettings[LOOT_SNIPER_MAX])
			Give(client, "hunting_rifle", "You hear something drop to the ground...", sim);
	}
}
