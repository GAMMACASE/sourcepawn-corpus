/* Plugin Template generated by Pawn Studio */

#include <sourcemod>
#include <sdktools>
#include <items_core>

#define PL_VERSION			"0.1"

#define CVAR_VERSION			0
#define CVAR_ENABLE				1
#define CVAR_FLAG				2
#define CVAR_SLOTS				3
#define CVAR_MESSAGE			4
#define NUM_CVARS				5

new Handle:g_cvars[NUM_CVARS];

public Plugin:myinfo = 
{
	name = "Admin-Only Hats",
	author = "Jindo",
	description = "Block certain hats from being worn if the users aren't admins",
	version = PL_VERSION,
	url = "http://www.topaz-games.com/"
}

public OnPluginStart()
{
	g_cvars[CVAR_VERSION] = CreateConVar("aoh_version", PL_VERSION, "Version of the plugin.", FCVAR_PLUGIN|FCVAR_NOTIFY|FCVAR_REPLICATED);
	g_cvars[CVAR_ENABLE] = CreateConVar("aoh_enable", "1", "Enable the plugin.", FCVAR_PLUGIN);
	g_cvars[CVAR_FLAG] = CreateConVar("aoh_flag", "a", "Flag required to access admin-only slots.", FCVAR_PLUGIN);
	g_cvars[CVAR_SLOTS] = CreateConVar("aoh_slots", "12", "Slots that only the admins can access.", FCVAR_PLUGIN);
	g_cvars[CVAR_MESSAGE] = CreateConVar("aoh_msg", "[IM] You do not have access to this hat.", "Message to display if an invalid user tries to access a hat.", FCVAR_PLUGIN);
}

public Action:OnPlayerEquipItemPre(client, Handle:item, bool:regenerating)
{
	decl String:slot_compare[8];
	GetConVarString(g_cvars[CVAR_SLOTS], slot_compare, sizeof(slot_compare))
	new slot = GetItemSlot(item);
	decl String:strSlot[8];
	IntToString(slot, strSlot, sizeof(strSlot));
	if (StrContains(slot_compare, strSlot, false) != -1)
	{
		decl String:flags[32];
		GetConVarString(g_cvars[CVAR_FLAG], flags, sizeof(flags));
		if (!AdminMatch(client, flags))
		{
			return Plugin_Stop;
		}
	}
	return Plugin_Continue;
}

stock bool:AdminMatch(client, const String:flags[])
{
	if (GetUserFlagBits(client) & ADMFLAG_ROOT)
	{
		return true;
	}
	new iFlags = ReadFlagString(flags);
	if (GetUserFlagBits(client) & iFlags)
	{
		return true;
	}
	decl String:msg[128];
	GetConVarString(g_cvars[CVAR_MESSAGE], msg, sizeof(msg));
	PrintToChat(client, msg);
	return false;
}
