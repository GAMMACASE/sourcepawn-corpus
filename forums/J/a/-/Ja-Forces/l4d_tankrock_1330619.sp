/* Plugin Template generated by Pawn Studio */

#include <sourcemod>
#include <sdkhooks>
#include <sdktools>
#include <sdktools_functions>

new Handle:l4d_rock_fire;
new tank=0;
public Plugin:myinfo = 
{
	name = "tank's burning rock",
	author = "Pan Xiaohai",
	description = "tank's burning rock",
	version = "1.0",
	url = "<- URL ->"
}
new bool:gamestart=false;
public OnPluginStart()
{
	l4d_rock_fire = CreateConVar("l4d_rock_fire", "1", "0:disable , 1:burning tank throws burning rock, 2:always throw burning rock", FCVAR_PLUGIN);
	AutoExecConfig(true, "l4d_tankrock");
	HookEvent("round_end", RoundEnd);
	HookEvent("finale_win", RoundEnd);
	HookEvent("mission_lost", RoundEnd);
	HookEvent("map_transition", RoundEnd);
	HookEvent("tank_spawn", RoundStart);
	HookEvent("ability_use", ability_use);
	gamestart=false;
}
public Action:RoundStart(Handle:event, const String:name[], bool:dontBroadcast)
{
	gamestart=true;
	tank=0;
}
public Action:RoundEnd(Handle:event, const String:name[], bool:dontBroadcast)
{
	gamestart=false;
}
public Action:ability_use(Handle:event, const String:name[], bool:dontBroadcast)
{
	decl String:s[32];
	GetEventString(event, "ability", s, 32);
	if(StrEqual(s, "ability_throw", true))
	{	
		tank = GetClientOfUserId(GetEventInt(event, "userid"));
	}

}
public OnEntityCreated(entity, const String:classname[])
{
	if(!gamestart)return;

	if(StrEqual(classname, "tank_rock", true))// && GetEntProp(entity, Prop_Send, "m_iTeamNum")==3)
	{
		new mode=GetConVarInt(l4d_rock_fire);
		if(mode==2)
		{
			IgniteEntity(entity, 100.0);
		}
		else if(mode==1)
		{
			if(tank>0 && tank<=MaxClients)
			{
				if(IsClientInGame(tank) && IsPlayerAlive(tank))
				{
					if(GetEntityFlags(tank) & FL_ONFIRE)
					{
						IgniteEntity(entity, 100.0);
					}
				}
			}
		}
	}
}