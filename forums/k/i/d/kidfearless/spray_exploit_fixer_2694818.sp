#define PLUGIN_VERSION 		"1.0"

/*=======================================================================================
	Plugin Info:

*	Name	:	[ANY] Spray Exploit Fixer
*	Author	:	SilverShot
*	Descrp	:	Deletes bad sprays and prevents them from crashing clients.
*	Link	:	https://forums.alliedmods.net/showthread.php?t=323447
*	Plugins	:	https://sourcemod.net/plugins.php?exact=exact&sortby=title&search=1&author=Silvers

========================================================================================
	Change Log:

1.0 (20-Apr-2020)
	- Initial release.

======================================================================================*/

#define DEBUG 0

#pragma semicolon 1
#pragma newdecls required

#include <sourcemod>
#include <sdktools>

int g_iValid[] = {86, 84, 70, 0, 7, 0, 0, 0, 42, 0, 0, 0, 42, 0, 0, 0, 42, 42, 42, 42, 42, 42, 0, 0, 42, 0, 0, 0, 0, 0, 0, 0};
ConVar g_cDeleteFile;

public Plugin myinfo =
{
	name = "[ANY] Spray Exploit Fixer",
	author = "SilverShot",
	description = "Deletes bad sprays and prevents them from crashing clients.",
	version = PLUGIN_VERSION,
	url = "https://forums.alliedmods.net/showthread.php?t=323447"
}


public void OnPluginStart()
{
	g_cDeleteFile = CreateConVar("spray_exploit_fixer_delete", "1", "Delete bad sprays?", _, true, 0.0, true, 1.0);
	CreateConVar("spray_exploit_fixer",	PLUGIN_VERSION, "Spray Exploit Fixer plugin version.", FCVAR_NOTIFY|FCVAR_DONTRECORD);
}

public void OnMapStart()
{
	IterateDirectory("materials/decals");
}

void IterateDirectory(const char[] path)
{
	DirectoryListing directory = OpenDirectory(path);
	char filename[PLATFORM_MAX_PATH];
	FileType fileType;
	File file;
	int read[32];
	#if DEBUG
	PrintToServer("Function... '%s'", path);
	#endif
	while ( directory.GetNext(filename, sizeof(filename), fileType) )
	{
		if(fileType == FileType_File)
		{
			Format(filename, sizeof(filename), "%s/%s", path, filename);

			#if DEBUG
			PrintToServer("iterating... '%s'", filename);
			#endif


			int extensionPoint = strlen(filename) - 4;
			if(StrContains(filename, ".vtf") != extensionPoint)
			{
				continue;
			}

			file = OpenFile(filename, "rb");
			file.Read(read, sizeof(read), 1);
			delete file;

			for( int i = 0; i < sizeof(g_iValid); i++ )
			{
				if( g_iValid[i] != 42 && read[i] != g_iValid[i] )
				{
					PrintToServer("Invalid file: '%s': %02d (%02X <> %02X)", filename, i, read[i], g_iValid[i]);
					if(g_cDeleteFile.BoolValue)
					{
						DeleteFile(filename);
					}
					break;
				}
			}
		}
		else if(fileType == FileType_Directory)
		{
			#if DEBUG
			PrintToServer("Directory... '%s'", filename);
			#endif
			if(filename[0] == '.')
			{
				continue;
			}

			Format(filename, sizeof(filename), "%s/%s", path, filename);
			#if DEBUG
			PrintToServer("Directory file... '%s'", filename);
			#endif
			IterateDirectory(filename);
		}
	}

	delete directory;
}