/* Plugin Template generated by Pawn Studio */

#include <sourcemod>
#include <cstrike>

public Plugin:myinfo = 
{
	name = "Jail Captain",
	author = "necavi",
	description = "Jail Captain!",
	version = "0.1",
	url = "http://necavi.com"
}
new Handle:g_hCvarEnabled = INVALID_HANDLE;
new bool:g_bWantsCaptain[MAXPLAYERS+1] = {false, ...};
new bool:g_bSomebodyChose = false;

public OnPluginStart()
{
	LoadTranslations("jailcaptain.phrases.txt");
	g_hCvarEnabled = CreateConVar("jc_enabled","1.0","Enables or disables the jail captain plugin",_,true,0.0,true,1.0);
	HookEvent("round_start",Event_RoundStart);
}
public Event_RoundStart(Handle:event,const String:name[],bool:dontBroadcast)
{
	g_bSomebodyChose = false;
	if(!GetConVarBool(g_hCvarEnabled))
		return;
	new Handle:menu = INVALID_HANDLE;
	for(new i=1;i<MaxClients;i++)
	{
		if(ValidPlayer(i)&&GetClientTeam(i)==CS_TEAM_CT)
		{
			menu = CreateMenu(MenuHandler_CaptainChoice);
			SetMenuTitle(menu, "%T", "Menu_Title", i);
			new String:text[64];
			Format(text, sizeof(text), "%T", "Menu_Nothing", i);	
			AddMenuItem(menu, "nothing", text,ITEMDRAW_DISABLED);	
			AddMenuItem(menu, "nothing", text,ITEMDRAW_DISABLED);	
			AddMenuItem(menu, "nothing", text,ITEMDRAW_DISABLED);
			Format(text, sizeof(text), "%T", "Yes", i);	
			AddMenuItem(menu, "yes", text);
			Format(text, sizeof(text), "%T", "No", i);	
			AddMenuItem(menu, "nothing", text);
			SetMenuExitButton(menu, false);
			DisplayMenu(menu,i,15);
		}
	}
	CreateTimer(15.0,CheckCaptain);
	return;
}
public Action:CheckCaptain(Handle:timer,any:data)
{
	if(!g_bSomebodyChose)
		return Plugin_Handled;
	new bool:chosen = false;
	new random;
	do {
		random = GetRandomInt(1,MaxClients);
		if(ValidPlayer(random)&&g_bWantsCaptain[random])
		{
			PrintToChatAll("%t","Captain_Chosen",random);
			chosen = true;
		}
	}
	while(!chosen);
	return Plugin_Continue;
}
public MenuHandler_CaptainChoice(Handle:menu, MenuAction:action, client, param2)
{
	if (action == MenuAction_End)
	{
		CloseHandle(menu);
	} else if(action == MenuAction_Select)
	{
		decl String:choice[16];
		GetMenuItem(menu,param2,choice,sizeof(choice));
		if(strcmp(choice,"yes")==0)
		{
			g_bWantsCaptain[client]=true;
			g_bSomebodyChose = true;
		}
	}
}
stock bool:ValidPlayer(i,bool:check_alive=false)
{
	if(i>0 && i<=MaxClients && IsClientConnected(i) && IsClientInGame(i))
	{
		if(check_alive && !IsPlayerAlive(i))
		{
			return false;
		}
		return true;
	}
	return false;
}