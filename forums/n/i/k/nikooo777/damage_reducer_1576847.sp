/* Plugin Template generated by Pawn Studio */

#include <sourcemod>
#include <sdkhooks>

public Plugin:myinfo = 
{
	name = "damage reducer",
	author = "Nikooo777",
	description = "reduce damage with a 10x factor",
	version = "1.3",
	url = "elite-hunterz.info"
}

public OnClientPutInServer(client)
{
    //SDKHook(client, SDKHook_OnTakeDamage, OnTakeDamage);
	SDKHook(client,SDKHook_TraceAttack,SDK_Forwarded_TraceAttack);
	//PrintToServer("onputserver fired");
}

public OnPluginStart()
{
	PrintToChatAll("Plugin view fixer/damage reducer has been loaded!");
	for (new client = 1; client < MaxClients; client++)
	{
		//PrintToServer("before checking for clients");
		if (ValidPlayer(client))
		{
			//SDKHook(client, SDKHook_OnTakeDamage, OnTakeDamage);
			SDKHook(client,SDKHook_TraceAttack,SDK_Forwarded_TraceAttack);
			//PrintToServer("onstartup fired");
		}
	}
}

public OnClientDisconnect(client)
{
	SDKUnhook(client,SDKHook_TraceAttack,SDK_Forwarded_TraceAttack);
	//PrintToServer("ondisconnect fired");
}
	
public OnPluginEnd()
{
	for (new client = 1;client <= MAXPLAYERS;client++)
	{
		if (ValidPlayer(client))
		{
			SDKUnhook(client,SDKHook_TraceAttack,SDK_Forwarded_TraceAttack);
			//PrintToServer("onend fired");
		}
	}
}
	
/*public Action:OnTakeDamage(victim, &attacker, &inflictor, &Float:damage, &damagetype)
{
	PrintToChatAll("first hook fired");
	if (GetClientTeam(victim)==GetClientTeam(attacker))
	{
		PrintToChatAll("same team, not firing");
		return Plugin_Continue;
	}
	else 
	{
	PrintToChatAll("first damage: %f",damage);
	damage =(damage/10);
	PrintToChatAll("second damage: %f",damage);
	return Plugin_Changed;
	}
}*/
public Action:SDK_Forwarded_TraceAttack(victim, &attacker, &inflictor, &Float:damage, &damagetype, &ammotype, hitbox, hitgroup)
{
	//PrintToChatAll("second hook called");
	if (!ValidPlayer(attacker))
	{
		return Plugin_Continue;
		//PrintToChatAll("world is doing damage?... not touching!");
	}
	else if (GetClientTeam(victim)==GetClientTeam(attacker))
	{
		//PrintToChatAll("same team, not firing");
		return Plugin_Continue;
	}
	else 
	{
	//PrintToChatAll("original damage: %f",damage);
	damage =(damage/10);
	//PrintToChatAll("reduced damage: %f",damage);
	return Plugin_Changed;
	}
}
stock bool:ValidPlayer(client,bool:check_alive=false){
	if(client>0 && client<=MaxClients && IsClientConnected(client) && IsClientInGame(client))
	{
		if(check_alive && !IsPlayerAlive(client))
		{
			return false;
		}
		return true;
	}
	return false;
}