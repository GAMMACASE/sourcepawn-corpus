/* Plugin Template generated by Pawn Studio */

#include <sourcemod>
#include <sdktools>

#define TEAM_T	2
#define TEAM_CT 3

#define PLUGIN_VERSION "1.21"

public Plugin:myinfo = 
{
	name = "Zombie regen ammoz",
	author = "InstantDeath",
	description = "Regenerates ammoz for humans",
	version = PLUGIN_VERSION,
	url = "http://www.xpgaming.net/"
}

public OnPluginStart()
{
	CreateConVar("sm_zombie_regen_ammoz_version", PLUGIN_VERSION, "Zombie Regen Ammoz Version", FCVAR_PLUGIN|FCVAR_SPONLY|FCVAR_REPLICATED|FCVAR_NOTIFY);
	RegConsoleCmd("say", Command_Say);
	
	HookEvent("player_hurt", OnPlayerHurt)
	HookEvent("weapon_fire_on_empty", OnWeaponEmpty);
	HookEvent("weapon_reload", OnWeaponReload);
}

public Action:OnPlayerHurt(Handle:event, const String:name[], bool:dontBroadcast)
{
	new victim = GetClientOfUserId(GetEventInt(event, "userid"));
	new VictimTeam = GetClientTeam(victim);
	new attacker = GetClientOfUserId(GetEventInt(event, "attacker"));
	new weaponid;
	if(attacker > 1)
	{
		if(IsClientInGame(attacker) && VictimTeam == TEAM_T)
		{
			new String: weaponname[32];
			weaponid = GetPlayerWeaponSlot(attacker, 0);
			if(weaponid != -1)
			{
				GetEdictClassname(weaponid, weaponname, sizeof(weaponname));
				if(GetWeaponAmmo(attacker, GetWeaponAmmoOffset(weaponname)) + 30 < 999)
				{
					SetWeaponAmmo(attacker, GetWeaponAmmoOffset(weaponname), GetWeaponAmmo(attacker, GetWeaponAmmoOffset(weaponname)) + 30);
				}
			}
			weaponid = GetPlayerWeaponSlot(attacker, 1);
			if(weaponid != -1)
			{
				GetEdictClassname(weaponid, weaponname, sizeof(weaponname));
				if(GetWeaponAmmo(attacker, GetWeaponAmmoOffset(weaponname)) + 30 <= 999)
				{
					SetWeaponAmmo(attacker, GetWeaponAmmoOffset(weaponname), GetWeaponAmmo(attacker, GetWeaponAmmoOffset(weaponname)) + 30);
				}
			}
		}
	}
	
	return Plugin_Continue;
}


public Action:OnWeaponEmpty(Handle:event,const String:name[],bool:dontBroadcast)
{
	new client = GetClientOfUserId(GetEventInt(event,"userid")); // Get clients index
	new ClientTeam = GetClientTeam(client);
	
	new weaponid;
	
	if(ClientTeam == TEAM_CT)
	{
		new String: weaponname[32];
		
		weaponid = GetPlayerWeaponSlot(client, 0);
		if(weaponid != -1)
		{
			GetEdictClassname(weaponid, weaponname, sizeof(weaponname));
			if(GetWeaponAmmo(client, GetWeaponAmmoOffset(weaponname)) < 200)
				SetWeaponAmmo(client, GetWeaponAmmoOffset(weaponname), GetWeaponAmmo(client, GetWeaponAmmoOffset(weaponname)) + 200);
		}
		weaponid = GetPlayerWeaponSlot(client, 1);
		if(weaponid != -1)
		{
			GetEdictClassname(weaponid, weaponname, sizeof(weaponname));
			if(GetWeaponAmmo(client, GetWeaponAmmoOffset(weaponname)) < 200)
				SetWeaponAmmo(client, GetWeaponAmmoOffset(weaponname), GetWeaponAmmo(client, GetWeaponAmmoOffset(weaponname)) + 200);
		}
	}
	return Plugin_Continue;
}

public Action:OnWeaponReload(Handle:event,const String:name[],bool:dontBroadcast)
{
	new client = GetClientOfUserId(GetEventInt(event,"userid")); // Get clients index
	new ClientTeam = GetClientTeam(client);
	
	new weaponid;
	
	if(ClientTeam == TEAM_CT)
	{
		new String: weaponname[32];
		weaponid = GetPlayerWeaponSlot(client, 0);
		if(weaponid != -1)
		{
			GetEdictClassname(weaponid, weaponname, sizeof(weaponname));
			if(GetWeaponAmmo(client, GetWeaponAmmoOffset(weaponname)) + 30 < 999)
			{
				SetWeaponAmmo(client, GetWeaponAmmoOffset(weaponname), GetWeaponAmmo(client, GetWeaponAmmoOffset(weaponname)) + 30);
			}
		}
		weaponid = GetPlayerWeaponSlot(client, 1);
		if(weaponid != -1)
		{
			GetEdictClassname(weaponid, weaponname, sizeof(weaponname));
			if(GetWeaponAmmo(client, GetWeaponAmmoOffset(weaponname)) + 30 <= 999)
			{
				SetWeaponAmmo(client, GetWeaponAmmoOffset(weaponname), GetWeaponAmmo(client, GetWeaponAmmoOffset(weaponname)) + 30);
			}
		}
	}
	return Plugin_Continue;
}

public GetWeaponAmmoOffset(String:Weapon[])
{
	if(StrEqual(Weapon, "weapon_deagle", false))
	{
		return 1;
	}
	else if(StrEqual(Weapon, "weapon_ak47", false) || StrEqual(Weapon, "weapon_aug", false) || StrEqual(Weapon, "weapon_g3sg1", false) || StrEqual(Weapon, "weapon_scout", false))
	{
		return 2;
	}
	else if(StrEqual(Weapon, "weapon_famas", false) || StrEqual(Weapon, "weapon_galil", false) || StrEqual(Weapon, "weapon_m4a1", false) || StrEqual(Weapon, "weapon_sg550", false) || StrEqual(Weapon, "weapon_sg552", false))
	{
		return 3;
	}
	else if(StrEqual(Weapon, "weapon_m249", false))
	{
		return 4;
	}
	else if(StrEqual(Weapon, "weapon_awp", false))
	{
		return 5;
	}
	else if(StrEqual(Weapon, "weapon_elite", false) || StrEqual(Weapon, "weapon_glock", false) || StrEqual(Weapon, "weapon_mp5navy", false) || StrEqual(Weapon, "weapon_tmp", false))
	{
		return 6;
	}
	else if(StrEqual(Weapon, "weapon_xm1014", false) || StrEqual(Weapon, "weapon_m3", false))
	{
		return 7;
	}
	else if(StrEqual(Weapon, "weapon_mac10", false) || StrEqual(Weapon, "weapon_ump45", false) || StrEqual(Weapon, "weapon_usp", false))
	{
		return 8;
	}
	else if(StrEqual(Weapon, "weapon_p228", false))
	{
		return 9;
	}
	else if(StrEqual(Weapon, "weapon_fiveseven", false) || StrEqual(Weapon, "weapon_p90", false))
	{
		return 10;
	}
	else if(StrEqual(Weapon, "weapon_hegrenade", false))
	{
		return 11;
	}
	else if(StrEqual(Weapon, "weapon_flashbang", false))
	{
		return 12;
	}
	else if(StrEqual(Weapon, "weapon_smokegrenade", false))
	{
		return 13;
	}
	return -1;
}

public Action:Command_Say(client,args)
{
	new String:speech[128];
	GetCmdArgString(speech,sizeof(speech));
	if(client != 0)
	{
		new startidx = 0;
		if (speech[0] == '"')
		{
			startidx = 1;
			// Strip the ending quote, if there is one
			new len = strlen(speech);
			if (speech[len-1] == '"')
			{
				speech[len-1] = '\0';
			}
		}
		if(strcmp(speech[startidx],"!zammo",false) == 0)
		{
			
			RefillAmmo(client);
			return Plugin_Continue;
		}
	}
	
	return Plugin_Continue;
}

public RefillAmmo(client)
{
	new ClientTeam = GetClientTeam(client);
	
	new weaponid;
	
	if(ClientTeam == TEAM_CT)
	{
		new String: weaponname[32];
		weaponid = GetPlayerWeaponSlot(client, 0);
		if(weaponid != -1)
		{
			GetEdictClassname(weaponid, weaponname, sizeof(weaponname));
			SetWeaponAmmo(client, GetWeaponAmmoOffset(weaponname), 999)
		}
		weaponid = GetPlayerWeaponSlot(client, 1);
		if(weaponid != -1)
		{
			GetEdictClassname(weaponid, weaponname, sizeof(weaponname));
			SetWeaponAmmo(client, GetWeaponAmmoOffset(weaponname), 999);
		}
	}
}

stock GetWeaponAmmo(client, slot)
{
	new ammoOffset = FindSendPropInfo("CCSPlayer", "m_iAmmo");
	return GetEntData(client, ammoOffset+(slot*4));
}  

stock SetWeaponAmmo(client, slot, ammo)
{
	new ammoOffset = FindSendPropInfo("CCSPlayer", "m_iAmmo");
	return SetEntData(client, ammoOffset+(slot*4), ammo);
}