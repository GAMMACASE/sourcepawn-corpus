/* Plugin Template generated by Pawn Studio */

#include <sourcemod>
#pragma semicolon 1
#define PLUGIN_VERSION "1.02"
#define CVAR_FLAGS FCVAR_PLUGIN

public Plugin:myinfo = 
{
	name = "[L4D2] Tank Rush",
	author = "Grammernatzi",
	description = "Spawns an endless amount of tanks capped by a cvar limit",
	version = PLUGIN_VERSION,
	url = ""
}

new numtanks;
new Handle:maxtanks;
new Handle:tankrushon;
new timertick;
new Handle:tankinterval;
new Handle:tankdeathheal;
new Handle:tanksurvheal;
new Handle:tanksurvmaxhealth;

public OnPluginStart()
{
	CreateConVar("tankrush_version", PLUGIN_VERSION, "Tankrush_Version", FCVAR_PLUGIN|FCVAR_SPONLY|FCVAR_REPLICATED|FCVAR_NOTIFY);
	maxtanks = CreateConVar("tankrush_maxtanks", "20", "Maximum amount of tanks in tank rush", CVAR_FLAGS, true, 0.0);
	tankrushon = CreateConVar("tankrush_on","1", "Is tank rush on? Default = 1", CVAR_FLAGS, true, 0.0);
	tankinterval = CreateConVar("tankrush_interval","12", "How many seconds till another tank spawns.", CVAR_FLAGS, true, 0.0);
	tankdeathheal = CreateConVar("tankrush_heal","1", "Will survivors be healed on tank death? Default = 1", CVAR_FLAGS, true, 0.0);
	tanksurvheal = CreateConVar("tankrush_survheal","10", "How much health will Survivors get when tank dies? Default = 10", CVAR_FLAGS, true, 0.0);
	tanksurvmaxhealth = CreateConVar("tankrush_survmaxhealth","100", "What is the Survivors max in-game health? Default = 100", CVAR_FLAGS, true, 0.0);
	AutoExecConfig(true,"L4DTankrush");
	
	CreateTimer(1.0,TimerUpdate, _, TIMER_REPEAT);
	HookEvent("tank_killed", TankKill);
	HookEvent("round_end", RoundEnd, EventHookMode_Pre);
}

public Action:TimerUpdate(Handle:timer)
{
	if (GetConVarBool(tankrushon))
	{
		new flags2 = GetCommandFlags("director_stop");
		SetCommandFlags("director_stop", flags2 & ~FCVAR_CHEAT);
		FakeClientCommand(1, "director_stop");
			
		SetCommandFlags("director_stop", flags2|FCVAR_CHEAT);
		
		new Handle:directornobosses;
		new Handle:directornomobs;
		new Handle:directornospecials;
		new Handle:commonlimit;
		directornobosses = FindConVar("director_no_bosses");
		directornomobs = FindConVar("director_no_mobs");
		directornospecials = FindConVar("director_no_specials");
		commonlimit = FindConVar("z_common_limit");
		SetConVarInt(directornobosses, 1);
		SetConVarInt(directornomobs, 1);
		SetConVarInt(directornospecials, 1);
		SetConVarInt(commonlimit, 0);
		
		timertick += 1;
		if (timertick >= GetConVarInt(tankinterval))
		{
			if (numtanks < GetConVarInt(maxtanks))
			{	
				new flags = GetCommandFlags("z_spawn");
				SetCommandFlags("z_spawn", flags & ~FCVAR_CHEAT);
			
				FakeClientCommand(1, "z_spawn tank auto");
				numtanks += 1;
			
				SetCommandFlags("z_spawn", flags|FCVAR_CHEAT);
			}
			
			timertick = 0;
		}
	}
	
}

public Action:RoundEnd(Handle:event, String:event_name[], bool:dontBroadcast)
{
	numtanks = 0;
}

 
public Action:TankKill(Handle:event, String:event_name[], bool:dontBroadcast)
{
	numtanks -= 1;
	if (GetConVarBool(tankdeathheal))
	{
		for (new i = 1; i <= MaxClients; i++)
		{
		if (IsValidClient(i) && GetClientTeam(i) == 2)
			{
			new HP = GetClientHealth(i);
			new Heal = GetConVarInt(tanksurvheal);
			new MaxHP = GetConVarInt(tanksurvmaxhealth);

			if ((HP + Heal) <= MaxHP)
			{
				SetEntProp(i, Prop_Send, "m_iHealth", HP + Heal, 1);
			}	
 
			else if (((HP + Heal) > MaxHP) && (HP < MaxHP))
			{
				SetEntProp(i, Prop_Send, "m_iHealth", MaxHP, 1);
			}
			}
		}
	}
}

public IsValidClient(i)
{
	if (i == 0)
		return false;

	if (!IsClientConnected(i))
		return false;
	
	//if (IsFakeClient(i))
		//return false;
	
	if (!IsClientInGame(i))
		return false;
	
	if (!IsPlayerAlive(i))
		return false;

	if (!IsValidEntity(i))
		return false;

	return true;
}
