/* Plugin Template generated by Pawn Studio */

#include <sourcemod>
#include <sdktools>
#include <sdkhooks>

#pragma newdecls required

public Plugin myinfo = 
{
	name = "Anti-Ghost data",
	author = "Merc1less",
	description = "The plugin prevents sending data to the survivors when the infected is in ghost-mode",
	version = "1.0",
	url = "*"
}
#define L4D_TEAM_SURVIVORS  2
#define L4D_TEAM_INFECTED	3

bool g_InGhostState[MAXPLAYERS+1];

public void OnPluginStart()
{
	HookEvent("player_spawn",Event_SpawnInfected,EventHookMode_Pre);
	HookEvent("ghost_spawn_time",Event_EnterGhostState,EventHookMode_Pre);
	HookEvent("player_team",Events_PlayerTeam,EventHookMode_Post);
	HookEvent("bot_player_replace",Event_BotReplace,EventHookMode_Post);	

	for (int p = 0;p <= MAXPLAYERS;p++)
		g_InGhostState[p] = false;
}
public Action Event_BotReplace (Event event, char[] name, bool dontBroadcast)
{	
	int clientId = GetClientOfUserId(event.GetInt("player"));	
	if (clientId > 0)
		g_InGhostState[clientId] = false;
		
	g_InGhostState[GetClientOfUserId(event.GetInt("bot"))] = false;
}
public Action Events_PlayerTeam (Event event, char[] name, bool dontBroadcast)
{		
	int iTeamChangersClientId = GetClientOfUserId(event.GetInt("userid"));		
	if (iTeamChangersClientId == 0 /*|| !IsClientInGame(iTeamChangersClientId)*/ || IsFakeClient(iTeamChangersClientId))
		return Plugin_Continue;

	if (event.GetInt("team")    == L4D_TEAM_INFECTED) SDKHook  (iTeamChangersClientId, SDKHook_SetTransmit, SDKHook_Transmitting);
	if (event.GetInt("oldteam") == L4D_TEAM_INFECTED) SDKUnhook(iTeamChangersClientId, SDKHook_SetTransmit, SDKHook_Transmitting); //Necessary or already destroyed?

	return Plugin_Continue;
}
public Action SDKHook_Transmitting(int infected, int OtherId)
{
	if ((OtherId >= 1 && OtherId <= MaxClients) && infected != OtherId && g_InGhostState[infected] /*&& !IsFakeClient(OtherId)*/ && GetClientTeam(OtherId) == L4D_TEAM_SURVIVORS)
		return Plugin_Handled;

	return Plugin_Continue;
}
public Action Event_SpawnInfected (Event event, char[] name, bool dontBroadcast)
{
	int InfectedId = GetClientOfUserId(event.GetInt("userid"));
	if (InfectedId > 0 && IsClientInGame(InfectedId) && GetClientTeam(InfectedId) == L4D_TEAM_INFECTED)
		g_InGhostState[InfectedId] = false;
		
	return Plugin_Continue;
}
public Action Event_EnterGhostState (Event event, char[] name, bool dontBroadcast)
{
	int InfectedId = GetClientOfUserId(event.GetInt("userid"));
	if (InfectedId > 0 && IsClientInGame(InfectedId))
		g_InGhostState[InfectedId] = true;

	return Plugin_Continue;
}