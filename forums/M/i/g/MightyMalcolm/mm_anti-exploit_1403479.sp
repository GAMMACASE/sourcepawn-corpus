/* Plugin Template generated by Pawn Studio */

#include <sourcemod>

public Plugin:myinfo = 
{
	name = "Anti-Exploit",
	author = "MightyMalcolm",
	description = "Sends client default-values every 0.3 seconds",
	version = "1.1",
	url = "http://thestormhawks.eu"
}

new Handle:g_players[MAXPLAYERS+1];

public OnPluginStart()
{
	RegAdminCmd("sm_allow_exploit",Command_Allow_Exploit,ADMFLAG_ROOT,"Allows a player to use exploits");
	RegAdminCmd("sm_block_exploit",Command_Block_Exploit,ADMFLAG_ROOT,"Prevents a player from using exploits");
}

public Action:Command_Allow_Exploit(client,args){
	
	// Tooltip?
	if(GetCmdArgs() < 1){
		ReplyToCommand(client,"[SM] Usage: sm_allow_exploit <player|#userid>");
	}
	
	// Get the 1st argument
	new String:arg1[32];
	GetCmdArg(1,arg1,sizeof arg1);
	new target = FindTarget(client,arg1,true,false);

	// No applicable target?
	if(target == -1){
		return Plugin_Handled;
	}
	
	// Stop timer for that target
	if(g_players[target] != INVALID_HANDLE){
		if(CloseHandle(g_players[target])){
			g_players[target] = INVALID_HANDLE;
		}
	}

	// Reply with a message
	new String:name[MAX_NAME_LENGTH];
	GetClientName(target,name,sizeof name);
	PrintToChatAll("[SM] Player %s is now allowed to use exploits!",name);
	return Plugin_Handled;
}

public Action:Command_Block_Exploit(client, args){

	// Tooltip?
	if(GetCmdArgs() < 1){
		ReplyToCommand(client,"[SM] Usage: sm_block_exploit <player|#userid>");
	}
	
	// Get the 1st argument
	new String:arg1[32];
	GetCmdArg(1,arg1,sizeof arg1);
	new target = FindTarget(client,arg1,true,false);

	// No applicable target?
	if(target == -1){
		return Plugin_Handled;
	}
	
	// Stop timer for that target
	if(g_players[target] != INVALID_HANDLE){
		if(CloseHandle(g_players[target])){
			g_players[target] = INVALID_HANDLE;
		}
	}
	
	// Start a new one
	g_players[target] = CreateTimer(0.3,Value_Ticker, target, TIMER_REPEAT);

	// Reply with a message
	new String:name[MAX_NAME_LENGTH];
	GetClientName(target,name,sizeof name);
	PrintToChatAll("[SM] Player %s is now blocked from using exploits!",name);
	return Plugin_Handled;
}
public OnClientConnected(client){
	// Start a timer for the new client
	g_players[client] = CreateTimer(0.3,Value_Ticker, client, TIMER_REPEAT);
}

public OnClientDisconnect(client){
	// Stop the client's timer
	if(g_players[client] != INVALID_HANDLE){
		if(CloseHandle(g_players[client])){
			g_players[client] = INVALID_HANDLE;
		}
	}
}

public Action:Value_Ticker(Handle:timer,any: client){
	// Send the commands to clients
	ClientCommand(client,"%s %d","mm_host_timescale", 1);
	ClientCommand(client,"%s %d","r_DrawShadowLight", 0);
	ClientCommand(client,"%s","firstperson");
	return Plugin_Continue;
}