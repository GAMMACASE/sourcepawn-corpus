/* Plugin Template generated by Pawn Studio */

#include <sourcemod>
#include <protobuf>
#include <sdktools>
#include <geoip>
#include <cstrike>
#include <socket>
#include <basecomm>


public Plugin:myinfo = 
{
	name = "CS:GO Team Name and Flag Changer",
	author = "Fanzy",
	description = "Changes your Team Name and Flag",
	version = "1.0.1",
	url = "http://www.quickfire-gaming.com/"
}

public OnPluginStart()
{
	RegAdminCmd("sm_ctname", Command_Teamname1, ADMFLAG_CHANGEMAP, "Sets a team name for Counter-Terrorists, sm_ctname <ct name>");
	RegAdminCmd("sm_ctflag", Command_Teamflag1, ADMFLAG_CHANGEMAP, "Sets a team flag for Counter-Terrorists, sm_ctname <ct flag>");
	RegAdminCmd("sm_tname", Command_Teamname2, ADMFLAG_CHANGEMAP, "Sets a team name for Terrorists, sm_ctflag <t name>");
	RegAdminCmd("sm_tflag", Command_Teamflag2, ADMFLAG_CHANGEMAP, "Sets a team flag for Terrorists, sm_ctname <t flag>");
	RegAdminCmd("sm_resetnames", Command_Resetnames, ADMFLAG_CHANGEMAP, "Resets all current names for Terrorists and Counter-Terrorists");
	RegAdminCmd("sm_resetflags", Command_Resetflags, ADMFLAG_CHANGEMAP, "Resets all current flags for Terrorists and Counter-Terrorists");
	RegAdminCmd("sm_reset", Command_Reset, ADMFLAG_CHANGEMAP, "Resets all current names and flags for Terrorists and Counter-Terrorists");
}
	
	public Action:Command_Teamname1(client, args)
{
	new String:arg1[32];
	GetCmdArgString(arg1, sizeof(arg1));
	ServerCommand("mp_teamname_1 %s", arg1);
	PrintToChat(client, "[\x02QuickFire\x01] Counter-Terrorists Name has been setup by \x04%N", client);
}


public Action:Command_Teamflag1(client, args)
{
	new String:arg1[32];
	GetCmdArgString(arg1, sizeof(arg1));
	ServerCommand("mp_teamflag_1 %s", arg1);
	PrintToChat(client, "[\x02QuickFire\x01] Counter-Terrorists Flag has been setup by \x04%N", client);
}

public Action:Command_Teamname2(client, args)
{
	new String:arg1[32];
	GetCmdArgString(arg1, sizeof(arg1));
	ServerCommand("mp_teamname_2 %s", arg1);
	PrintToChat(client, "[\x02QuickFire\x01] Terrorists Name has been setup by \x04%N", client);
}

public Action:Command_Teamflag2(client, args)
{
	new String:arg1[32];
	GetCmdArgString(arg1, sizeof(arg1));
	ServerCommand("mp_teamflag_2 %s", arg1);
	PrintToChat(client, "[\x02QuickFire\x01] Terrorists Flag has been setup by \x04%N", client);
}

public Action:Command_Reset(client, args)
{
	new String:arg1[32];
	GetCmdArgString(arg1, sizeof(arg1));
	ServerCommand("mp_teamname_1 Counter-Terrorists", arg1);
	ServerCommand("mp_teamname_2 Terrorists", arg1);
	ServerCommand("mp_teamflag_1 XX", arg1);
	ServerCommand("mp_teamflag_2 XX", arg1);
	PrintToChat(client, "[\x02QuickFire\x01] Names and Flags for both teams have been resetted by \x04%N", client);
}

public Action:Command_Resetnames(client, args)
{
	new String:arg1[32];
	GetCmdArgString(arg1, sizeof(arg1));
	ServerCommand("mp_teamname_1 Counter-Terrorists", arg1);
	ServerCommand("mp_teamname_2 Terrorists", arg1);
	PrintToChat(client, "[\x02QuickFire\x01] Names for both teams have been resetted by \x04%N", client);
}

public Action:Command_Resetflags(client, args)
{
	new String:arg1[32];
	GetCmdArgString(arg1, sizeof(arg1));
	ServerCommand("mp_teamflag_1 XX", arg1);
	ServerCommand("mp_teamflag_2 XX", arg1);
	PrintToChat(client, "[\x02QuickFire\x01] Flags for both teams have been resetted by \x04%N", client);
}