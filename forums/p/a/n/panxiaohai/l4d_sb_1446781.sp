/* Plugin Template generated by Pawn Studio */

#include <sourcemod>
#include <sdktools>
#include <sdktools_functions>
public Plugin:myinfo = 
{
	name = "sb_takecontrol",
	author = "pan xiaohai",
	description = "<- Description ->",
	version = "1.0",
	url = "<- URL ->"
}

public OnPluginStart()
{
	decl String:GameName[16];
	new GameMode;
	GetConVarString(FindConVar("mp_gamemode"), GameName, sizeof(GameName));
	
	if (StrEqual(GameName, "survival", false))
		GameMode = 3;
	else if (StrEqual(GameName, "versus", false) || StrEqual(GameName, "teamversus", false) || StrEqual(GameName, "scavenge", false) || StrEqual(GameName, "teamscavenge", false))
		GameMode = 2;
	else if (StrEqual(GameName, "coop", false) || StrEqual(GameName, "realism", false))
		GameMode = 1;
	else
	{
		GameMode = 0;
 	}
	if(GameMode!=2)
	{
		RegConsoleCmd("sm_kickabot",sm_kickabot, "kick a survivor bot ");
		RegConsoleCmd("sm_addabot",sm_addabot, "create a survivor bot ");
		RegConsoleCmd("sm_join",sm_join, "spectator join survivor team");
		RegConsoleCmd("sm_sb", sm_sb, "sb_takecontrol, need watch the bot after you dead");
	}
}
public Action:sm_sb(client, args)
{
	StripAndExecuteClientCommand(client, "sb_takecontrol", "", "", "");
	return Plugin_Handled;
}
public Action:sm_addabot(client, args)
{
	new bot = CreateFakeClient("I am not real.");
	if(bot != 0)
	{
		ChangeClientTeam(bot, 2);
		if(DispatchKeyValue(bot, "classname", "SurvivorBot") == false)
		{
			PrintToChatAll("\x01Create bot failed");
			return Plugin_Handled;
		}
		
		if(DispatchSpawn(bot) == false)
		{
			PrintToChatAll("\x01Create bot failed");
			return Plugin_Handled;
		}
		SetEntityRenderColor(bot, 128, 0, 0, 255);
 			
		CreateTimer(1.0, kick, bot, TIMER_FLAG_NO_MAPCHANGE);  
		PrintToChatAll("\x01Create bot sucessfully, spectators type !join to join survivors");
	}
	return Plugin_Handled;
}
public Action:kick(Handle:timer, any:bot)
{
	KickClient(bot, "fake player");
	return Plugin_Stop;
}
public Action:sm_kickabot(client, args)
{
	for(new i=1; i<GetMaxClients(); i++)
	{
		if (IsClientConnected(i) && IsClientInGame(i) && IsFakeClient(i)  && GetClientTeam(i) == 2)
		{
			decl String:player_name[64];
			GetClientName(i, player_name, sizeof(player_name));
			PrintToChatAll("\x01\x04 %s \x01have left game\x01", player_name);
			KickClient(i, "");
			break;
		}
	}	
	return Plugin_Handled;
}
public Action:sm_join(client, args)
{
 	FakeClientCommand(client, "jointeam 2");
 	return Plugin_Handled;
}
StripAndExecuteClientCommand(client, String:command[], String:param1[], String:param2[], String:param3[])
{
	new flags = GetCommandFlags(command);
	SetCommandFlags(command, flags & ~FCVAR_CHEAT);
	FakeClientCommand(client, "%s %s %s %s", command, param1, param2, param3);
	SetCommandFlags(command, flags);
}